<Type Name="ITypeProvider2" FullName="Microsoft.FSharp.Core.CompilerServices.ITypeProvider2">
  <TypeSignature Language="C#" Value="public interface ITypeProvider2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeProvider2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Core.CompilerServices.ITypeProvider2" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
 Represents additional, optional information for a type provider component
</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplyStaticArgumentsForMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase ApplyStaticArgumentsForMethod (System.Reflection.MethodBase methodWithoutArguments, string methodNameWithArguments, object[] staticArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodBase ApplyStaticArgumentsForMethod(class System.Reflection.MethodBase methodWithoutArguments, string methodNameWithArguments, object[] staticArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider2.ApplyStaticArgumentsForMethod(System.Reflection.MethodBase,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodWithoutArguments" Type="System.Reflection.MethodBase" />
        <Parameter Name="methodNameWithArguments" Type="System.String" />
        <Parameter Name="staticArguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodWithoutArguments">the provided method definition which has static parameters</param>
        <param name="methodNameWithArguments">the full name of the method that must be returned, including encoded representations of static parameters</param>
        <param name="staticArguments">the values of the static parameters, indexed by name</param>
        <summary>
 Apply static arguments to a provided method that accepts static arguments. 
 </summary>
        <returns>The provided method definition corresponding to the given static parameter values</returns>
        <remarks>The provider must return a provided method with the given mangled name.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStaticParametersForMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetStaticParametersForMethod (System.Reflection.MethodBase methodWithoutArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetStaticParametersForMethod(class System.Reflection.MethodBase methodWithoutArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider2.GetStaticParametersForMethod(System.Reflection.MethodBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodWithoutArguments" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="methodWithoutArguments">A method returned by GetMethod on a provided type</param>
        <summary>
 Get the static parameters for a provided method. 
 </summary>
        <returns>The static parameters of the provided method, if any</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
