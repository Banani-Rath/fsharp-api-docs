<Type Name="IProvidedNamespace" FullName="Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace">
  <TypeSignature Language="C#" Value="public interface IProvidedNamespace" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvidedNamespace" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvidedNamespace" />
  <TypeSignature Language="F#" Value="type IProvidedNamespace = interface" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
 Represents a namespace provided by a type provider component.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNestedNamespaces">
      <MemberSignature Language="C#" Value="public Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace[] GetNestedNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace[] GetNestedNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.GetNestedNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNestedNamespaces () As IProvidedNamespace()" />
      <MemberSignature Language="F#" Value="abstract member GetNestedNamespaces : unit -&gt; Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace[]" Usage="iProvidedNamespace.GetNestedNamespaces " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 The sub-namespaces in this namespace. An optional member to prevent generation of namespaces until an outer namespace is explored.
</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes () As Type()" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]" Usage="iProvidedNamespace.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 The top-level types
 </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceName">
      <MemberSignature Language="C#" Value="public string NamespaceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.NamespaceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceName As String" />
      <MemberSignature Language="F#" Value="member this.NamespaceName : string" Usage="Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.NamespaceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 Namespace name the provider injects types into.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeName">
      <MemberSignature Language="C#" Value="public Type ResolveTypeName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveTypeName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.ResolveTypeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveTypeName (typeName As String) As Type" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeName : string -&gt; Type" Usage="iProvidedNamespace.ResolveTypeName typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">To be added.</param>
        <summary>
 Compilers call this method to query a type provider for a type <c>name</c>.
 </summary>
        <returns />
        <remarks>Resolver should return a type called <c>name</c> in namespace <c>NamespaceName</c> or <c>null</c> if the type is unknown.
 </remarks>
      </Docs>
    </Member>
  </Members>
</Type>