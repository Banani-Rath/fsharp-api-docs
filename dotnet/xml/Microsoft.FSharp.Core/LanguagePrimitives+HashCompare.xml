<Type Name="LanguagePrimitives+HashCompare" FullName="Microsoft.FSharp.Core.LanguagePrimitives+HashCompare">
  <TypeSignature Language="C#" Value="public static class LanguagePrimitives.HashCompare" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract sealed LanguagePrimitives/HashCompare extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
  <TypeSignature Language="VB.NET" Value="Public Class LanguagePrimitives.HashCompare" />
  <TypeSignature Language="F#" Value="module LanguagePrimitives.HashCompare" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The F# compiler emits calls to some of the functions in this module as part of the compiled form of some language constructs</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FastCompareTuple2&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static int FastCompareTuple2&lt;T1,T2&gt; (System.Collections.IComparer comparer, Tuple&lt;T1,T2&gt; tuple1, Tuple&lt;T1,T2&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastCompareTuple2&lt;T1, T2&gt;(class System.Collections.IComparer comparer, class System.Tuple`2&lt;!!T1, !!T2&gt; tuple1, class System.Tuple`2&lt;!!T1, !!T2&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastCompareTuple2(Of T1, T2) (comparer As IComparer, tuple1 As Tuple(Of T1, T2), tuple2 As Tuple(Of T1, T2)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2 : System.Collections.IComparer -&gt; 'T1 * 'T2 -&gt; 'T1 * 'T2 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastCompareTuple3&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static int FastCompareTuple3&lt;T1,T2,T3&gt; (System.Collections.IComparer comparer, Tuple&lt;T1,T2,T3&gt; tuple1, Tuple&lt;T1,T2,T3&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastCompareTuple3&lt;T1, T2, T3&gt;(class System.Collections.IComparer comparer, class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; tuple1, class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastCompareTuple3(Of T1, T2, T3) (comparer As IComparer, tuple1 As Tuple(Of T1, T2, T3), tuple2 As Tuple(Of T1, T2, T3)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3 : System.Collections.IComparer -&gt; 'T1 * 'T2 * 'T3 -&gt; 'T1 * 'T2 * 'T3 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2,T3&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2,T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastCompareTuple4&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static int FastCompareTuple4&lt;T1,T2,T3,T4&gt; (System.Collections.IComparer comparer, Tuple&lt;T1,T2,T3,T4&gt; tuple1, Tuple&lt;T1,T2,T3,T4&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastCompareTuple4&lt;T1, T2, T3, T4&gt;(class System.Collections.IComparer comparer, class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; tuple1, class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastCompareTuple4(Of T1, T2, T3, T4) (comparer As IComparer, tuple1 As Tuple(Of T1, T2, T3, T4), tuple2 As Tuple(Of T1, T2, T3, T4)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4 : System.Collections.IComparer -&gt; 'T1 * 'T2 * 'T3 * 'T4 -&gt; 'T1 * 'T2 * 'T3 * 'T4 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastCompareTuple5&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static int FastCompareTuple5&lt;T1,T2,T3,T4,T5&gt; (System.Collections.IComparer comparer, Tuple&lt;T1,T2,T3,T4,T5&gt; tuple1, Tuple&lt;T1,T2,T3,T4,T5&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastCompareTuple5&lt;T1, T2, T3, T4, T5&gt;(class System.Collections.IComparer comparer, class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; tuple1, class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastCompareTuple5(Of T1, T2, T3, T4, T5) (comparer As IComparer, tuple1 As Tuple(Of T1, T2, T3, T4, T5), tuple2 As Tuple(Of T1, T2, T3, T4, T5)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5 : System.Collections.IComparer -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastEqualsTuple2&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static bool FastEqualsTuple2&lt;T1,T2&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2&gt; tuple1, Tuple&lt;T1,T2&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FastEqualsTuple2&lt;T1, T2&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`2&lt;!!T1, !!T2&gt; tuple1, class System.Tuple`2&lt;!!T1, !!T2&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastEqualsTuple2(Of T1, T2) (comparer As IEqualityComparer, tuple1 As Tuple(Of T1, T2), tuple2 As Tuple(Of T1, T2)) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 -&gt; 'T1 * 'T2 -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastEqualsTuple3&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static bool FastEqualsTuple3&lt;T1,T2,T3&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2,T3&gt; tuple1, Tuple&lt;T1,T2,T3&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FastEqualsTuple3&lt;T1, T2, T3&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; tuple1, class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastEqualsTuple3(Of T1, T2, T3) (comparer As IEqualityComparer, tuple1 As Tuple(Of T1, T2, T3), tuple2 As Tuple(Of T1, T2, T3)) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 * 'T3 -&gt; 'T1 * 'T2 * 'T3 -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2,T3&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2,T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastEqualsTuple4&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static bool FastEqualsTuple4&lt;T1,T2,T3,T4&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2,T3,T4&gt; tuple1, Tuple&lt;T1,T2,T3,T4&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FastEqualsTuple4&lt;T1, T2, T3, T4&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; tuple1, class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastEqualsTuple4(Of T1, T2, T3, T4) (comparer As IEqualityComparer, tuple1 As Tuple(Of T1, T2, T3, T4), tuple2 As Tuple(Of T1, T2, T3, T4)) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 * 'T3 * 'T4 -&gt; 'T1 * 'T2 * 'T3 * 'T4 -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastEqualsTuple5&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static bool FastEqualsTuple5&lt;T1,T2,T3,T4,T5&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2,T3,T4,T5&gt; tuple1, Tuple&lt;T1,T2,T3,T4,T5&gt; tuple2);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FastEqualsTuple5&lt;T1, T2, T3, T4, T5&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; tuple1, class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; tuple2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastEqualsTuple5(Of T1, T2, T3, T4, T5) (comparer As IEqualityComparer, tuple1 As Tuple(Of T1, T2, T3, T4, T5), tuple2 As Tuple(Of T1, T2, T3, T4, T5)) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5 comparer tuple1 tuple2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple1" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" />
        <Parameter Name="tuple2" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple1">To be added.</param>
        <param name="tuple2">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastHashTuple2&lt;T1,T2&gt;">
      <MemberSignature Language="C#" Value="public static int FastHashTuple2&lt;T1,T2&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2&gt; tuple);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastHashTuple2&lt;T1, T2&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`2&lt;!!T1, !!T2&gt; tuple) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastHashTuple2(Of T1, T2) (comparer As IEqualityComparer, tuple As Tuple(Of T1, T2)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2 comparer tuple" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple" Type="System.Tuple&lt;T1,T2&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastHashTuple3&lt;T1,T2,T3&gt;">
      <MemberSignature Language="C#" Value="public static int FastHashTuple3&lt;T1,T2,T3&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2,T3&gt; tuple);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastHashTuple3&lt;T1, T2, T3&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`3&lt;!!T1, !!T2, !!T3&gt; tuple) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastHashTuple3(Of T1, T2, T3) (comparer As IEqualityComparer, tuple As Tuple(Of T1, T2, T3)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 * 'T3 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3 comparer tuple" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple" Type="System.Tuple&lt;T1,T2,T3&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastHashTuple4&lt;T1,T2,T3,T4&gt;">
      <MemberSignature Language="C#" Value="public static int FastHashTuple4&lt;T1,T2,T3,T4&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2,T3,T4&gt; tuple);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastHashTuple4&lt;T1, T2, T3, T4&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`4&lt;!!T1, !!T2, !!T3, !!T4&gt; tuple) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastHashTuple4(Of T1, T2, T3, T4) (comparer As IEqualityComparer, tuple As Tuple(Of T1, T2, T3, T4)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 * 'T3 * 'T4 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4 comparer tuple" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple" Type="System.Tuple&lt;T1,T2,T3,T4&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FastHashTuple5&lt;T1,T2,T3,T4,T5&gt;">
      <MemberSignature Language="C#" Value="public static int FastHashTuple5&lt;T1,T2,T3,T4,T5&gt; (System.Collections.IEqualityComparer comparer, Tuple&lt;T1,T2,T3,T4,T5&gt; tuple);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 FastHashTuple5&lt;T1, T2, T3, T4, T5&gt;(class System.Collections.IEqualityComparer comparer, class System.Tuple`5&lt;!!T1, !!T2, !!T3, !!T4, !!T5&gt; tuple) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FastHashTuple5(Of T1, T2, T3, T4, T5) (comparer As IEqualityComparer, tuple As Tuple(Of T1, T2, T3, T4, T5)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5 : System.Collections.IEqualityComparer -&gt; 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5 comparer tuple" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T1" />
        <TypeParameter Name="T2" />
        <TypeParameter Name="T3" />
        <TypeParameter Name="T4" />
        <TypeParameter Name="T5" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="tuple" Type="System.Tuple&lt;T1,T2,T3,T4,T5&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T1">To be added.</typeparam>
        <typeparam name="T2">To be added.</typeparam>
        <typeparam name="T3">To be added.</typeparam>
        <typeparam name="T4">To be added.</typeparam>
        <typeparam name="T5">To be added.</typeparam>
        <param name="comparer">To be added.</param>
        <param name="tuple">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericComparisonIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int GenericComparisonIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GenericComparisonIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericComparisonIntrinsic(Of T) (x As T, y As T) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic : 'T -&gt; 'T -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericComparisonWithComparerIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int GenericComparisonWithComparerIntrinsic&lt;T&gt; (System.Collections.IComparer comp, T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GenericComparisonWithComparerIntrinsic&lt;T&gt;(class System.Collections.IComparer comp, !!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericComparisonWithComparerIntrinsic(Of T) (comp As IComparer, x As T, y As T) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic : System.Collections.IComparer -&gt; 'T -&gt; 'T -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic comp x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comp" Type="System.Collections.IComparer" />
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comp">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericEqualityERIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericEqualityERIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericEqualityERIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericEqualityERIntrinsic(Of T) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic : 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericEqualityIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericEqualityIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericEqualityIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericEqualityIntrinsic(Of T) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic : 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericEqualityWithComparerIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericEqualityWithComparerIntrinsic&lt;T&gt; (System.Collections.IEqualityComparer comp, T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericEqualityWithComparerIntrinsic&lt;T&gt;(class System.Collections.IEqualityComparer comp, !!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericEqualityWithComparerIntrinsic(Of T) (comp As IEqualityComparer, x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic : System.Collections.IEqualityComparer -&gt; 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic comp x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comp" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comp">To be added.</param>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericGreaterOrEqualIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericGreaterOrEqualIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericGreaterOrEqualIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericGreaterOrEqualIntrinsic(Of T) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic : 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericGreaterThanIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericGreaterThanIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericGreaterThanIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericGreaterThanIntrinsic(Of T) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic : 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericHashIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int GenericHashIntrinsic&lt;T&gt; (T input);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GenericHashIntrinsic&lt;T&gt;(!!T input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericHashIntrinsic(Of T) (input As T) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic : 'T -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericHashWithComparerIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int GenericHashWithComparerIntrinsic&lt;T&gt; (System.Collections.IEqualityComparer comp, T input);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 GenericHashWithComparerIntrinsic&lt;T&gt;(class System.Collections.IEqualityComparer comp, !!T input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericHashWithComparerIntrinsic(Of T) (comp As IEqualityComparer, input As T) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic : System.Collections.IEqualityComparer -&gt; 'T -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic comp input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comp" Type="System.Collections.IEqualityComparer" />
        <Parameter Name="input" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comp">To be added.</param>
        <param name="input">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericLessOrEqualIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericLessOrEqualIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericLessOrEqualIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericLessOrEqualIntrinsic(Of T) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic : 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericLessThanIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool GenericLessThanIntrinsic&lt;T&gt; (T x, T y);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool GenericLessThanIntrinsic&lt;T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenericLessThanIntrinsic(Of T) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic : 'T -&gt; 'T -&gt; bool" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LimitedGenericHashIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LimitedGenericHashIntrinsic&lt;T&gt; (int limit, T input);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 LimitedGenericHashIntrinsic&lt;T&gt;(int32 limit, !!T input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LimitedGenericHashIntrinsic(Of T) (limit As Integer, input As T) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic : int -&gt; 'T -&gt; int" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic limit input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="input" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="limit">To be added.</param>
        <param name="input">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalEqualityIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool PhysicalEqualityIntrinsic&lt;T&gt; (T x, T y) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static bool PhysicalEqualityIntrinsic&lt;class T&gt;(!!T x, !!T y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PhysicalEqualityIntrinsic(Of T As Class) (x As T, y As T) As Boolean" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic : 'T -&gt; 'T -&gt; bool (requires 'T : null)" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic x y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="x" Type="T" />
        <Parameter Name="y" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalHashIntrinsic&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int PhysicalHashIntrinsic&lt;T&gt; (T input) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 PhysicalHashIntrinsic&lt;class T&gt;(!!T input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PhysicalHashIntrinsic(Of T As Class) (input As T) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic : 'T -&gt; int (requires 'T : null)" Usage="Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilerMessage("This function is a primitive library routine used by optimized F# code and should not be used directly", 1204, IsHidden=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="input">To be added.</param>
        <summary>A primitive entry point used by the F# compiler for optimization purposes.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>