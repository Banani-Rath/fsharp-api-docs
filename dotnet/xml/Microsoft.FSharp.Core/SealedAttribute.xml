<Type Name="SealedAttribute" FullName="Microsoft.FSharp.Core.SealedAttribute">
  <TypeSignature Language="C#" Value="public sealed class SealedAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SealedAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Core.SealedAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SealedAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="F#" Value="type SealedAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Adding this attribute to class definition makes it sealed, which means it may not
 be extended or implemented.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SealedAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the attribute.</summary>
        <returns>The created attribute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SealedAttribute (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Core.SealedAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.FSharp.Core.SealedAttribute : bool -&gt; Microsoft.FSharp.Core.SealedAttribute" Usage="new Microsoft.FSharp.Core.SealedAttribute value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">Indicates whether the class is sealed.</param>
        <summary>Creates an instance of the attribute</summary>
        <returns>SealedAttribute</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.FSharp.Core.SealedAttribute.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Boolean" />
      <MemberSignature Language="F#" Value="member this.Value : bool" Usage="Microsoft.FSharp.Core.SealedAttribute.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The value of the attribute, indicating whether the type is sealed or not.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>