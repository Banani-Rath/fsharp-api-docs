<Type Name="FSharpReflectionExtensions" FullName="Microsoft.FSharp.Reflection.FSharpReflectionExtensions">
  <TypeSignature Language="C#" Value="public static class FSharpReflectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FSharpReflectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Reflection.FSharpReflectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Class FSharpReflectionExtensions" />
  <TypeSignature Language="F#" Value="module ReflectionExtensions" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.AutoOpen</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FSharpType.GetExceptionFields.Static">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo[] FSharpType.GetExceptionFields.Static (Type exceptionType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Reflection.PropertyInfo[] FSharpType.GetExceptionFields.Static(class System.Type exceptionType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#GetExceptionFields#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpType.GetExceptionFields.Static (exceptionType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As PropertyInfo()" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpType.GetExceptionFields.Static : Type * option&lt;bool&gt; -&gt; System.Reflection.PropertyInfo[]" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpType.GetExceptionFields.Static (exceptionType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="exceptionType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpType.GetRecordFields.Static">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo[] FSharpType.GetRecordFields.Static (Type recordType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Reflection.PropertyInfo[] FSharpType.GetRecordFields.Static(class System.Type recordType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#GetRecordFields#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpType.GetRecordFields.Static (recordType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As PropertyInfo()" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpType.GetRecordFields.Static : Type * option&lt;bool&gt; -&gt; System.Reflection.PropertyInfo[]" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpType.GetRecordFields.Static (recordType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpType.GetUnionCases.Static">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Reflection.UnionCaseInfo[] FSharpType.GetUnionCases.Static (Type unionType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Reflection.UnionCaseInfo[] FSharpType.GetUnionCases.Static(class System.Type unionType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#GetUnionCases#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpType.GetUnionCases.Static (unionType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As UnionCaseInfo()" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpType.GetUnionCases.Static : Type * option&lt;bool&gt; -&gt; Microsoft.FSharp.Reflection.UnionCaseInfo[]" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpType.GetUnionCases.Static (unionType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Reflection.UnionCaseInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpType.IsExceptionRepresentation.Static">
      <MemberSignature Language="C#" Value="public static bool FSharpType.IsExceptionRepresentation.Static (Type exceptionType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FSharpType.IsExceptionRepresentation.Static(class System.Type exceptionType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#IsExceptionRepresentation#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpType.IsExceptionRepresentation.Static (exceptionType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Boolean" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpType.IsExceptionRepresentation.Static : Type * option&lt;bool&gt; -&gt; bool" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpType.IsExceptionRepresentation.Static (exceptionType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="exceptionType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpType.IsRecord.Static">
      <MemberSignature Language="C#" Value="public static bool FSharpType.IsRecord.Static (Type typ, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FSharpType.IsRecord.Static(class System.Type typ, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#IsRecord#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpType.IsRecord.Static (typ As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Boolean" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpType.IsRecord.Static : Type * option&lt;bool&gt; -&gt; bool" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpType.IsRecord.Static (typ, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typ" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typ">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpType.IsUnion.Static">
      <MemberSignature Language="C#" Value="public static bool FSharpType.IsUnion.Static (Type typ, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FSharpType.IsUnion.Static(class System.Type typ, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#IsUnion#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpType.IsUnion.Static (typ As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Boolean" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpType.IsUnion.Static : Type * option&lt;bool&gt; -&gt; bool" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpType.IsUnion.Static (typ, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typ" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typ">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.GetExceptionFields.Static">
      <MemberSignature Language="C#" Value="public static object[] FSharpValue.GetExceptionFields.Static (object exn, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static object[] FSharpValue.GetExceptionFields.Static(object exn, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#GetExceptionFields#Static(System.Object,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.GetExceptionFields.Static (exn As Object, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Object()" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.GetExceptionFields.Static : obj * option&lt;bool&gt; -&gt; obj[]" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.GetExceptionFields.Static (exn, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exn" Type="System.Object" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="exn">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.GetRecordFields.Static">
      <MemberSignature Language="C#" Value="public static object[] FSharpValue.GetRecordFields.Static (object record, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static object[] FSharpValue.GetRecordFields.Static(object record, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#GetRecordFields#Static(System.Object,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.GetRecordFields.Static (record As Object, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Object()" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.GetRecordFields.Static : obj * option&lt;bool&gt; -&gt; obj[]" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.GetRecordFields.Static (record, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="System.Object" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="record">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.GetUnionFields.Static">
      <MemberSignature Language="C#" Value="public static Tuple&lt;Microsoft.FSharp.Reflection.UnionCaseInfo,object[]&gt; FSharpValue.GetUnionFields.Static (object value, Type unionType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Tuple`2&lt;class Microsoft.FSharp.Reflection.UnionCaseInfo, object[]&gt; FSharpValue.GetUnionFields.Static(object value, class System.Type unionType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#GetUnionFields#Static(System.Object,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.GetUnionFields.Static (value As Object, unionType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Tuple(Of UnionCaseInfo, Object())" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.GetUnionFields.Static : obj * Type * option&lt;bool&gt; -&gt; Microsoft.FSharp.Reflection.UnionCaseInfo * obj[]" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.GetUnionFields.Static (value, unionType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Tuple&lt;Microsoft.FSharp.Reflection.UnionCaseInfo,System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="unionType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="unionType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.MakeRecord.Static">
      <MemberSignature Language="C#" Value="public static object FSharpValue.MakeRecord.Static (Type recordType, object[] values, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FSharpValue.MakeRecord.Static(class System.Type recordType, object[] values, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#MakeRecord#Static(System.Type,System.Object[],Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.MakeRecord.Static (recordType As Type, values As Object(), allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Object" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.MakeRecord.Static : Type * obj[] * option&lt;bool&gt; -&gt; obj" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.MakeRecord.Static (recordType, values, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordType" Type="System.Type" />
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordType">To be added.</param>
        <param name="values">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.MakeUnion.Static">
      <MemberSignature Language="C#" Value="public static object FSharpValue.MakeUnion.Static (Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, object[] args, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FSharpValue.MakeUnion.Static(class Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, object[] args, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#MakeUnion#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,System.Object[],Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.MakeUnion.Static (unionCase As UnionCaseInfo, args As Object(), allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As Object" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.MakeUnion.Static : Microsoft.FSharp.Reflection.UnionCaseInfo * obj[] * option&lt;bool&gt; -&gt; obj" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.MakeUnion.Static (unionCase, args, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionCase" Type="Microsoft.FSharp.Reflection.UnionCaseInfo" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionCase">To be added.</param>
        <param name="args">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeRecordConstructor.Static">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Core.FSharpFunc&lt;object[],object&gt; FSharpValue.PreComputeRecordConstructor.Static (Type recordType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Core.FSharpFunc`2&lt;object[], object&gt; FSharpValue.PreComputeRecordConstructor.Static(class System.Type recordType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeRecordConstructor#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeRecordConstructor.Static (recordType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As FSharpFunc(Of Object(), Object)" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeRecordConstructor.Static : Type * option&lt;bool&gt; -&gt; (obj[] -&gt; obj)" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeRecordConstructor.Static (recordType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Core.FSharpFunc&lt;System.Object[],System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeRecordConstructorInfo.Static">
      <MemberSignature Language="C#" Value="public static System.Reflection.ConstructorInfo FSharpValue.PreComputeRecordConstructorInfo.Static (Type recordType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Reflection.ConstructorInfo FSharpValue.PreComputeRecordConstructorInfo.Static(class System.Type recordType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeRecordConstructorInfo#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeRecordConstructorInfo.Static (recordType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As ConstructorInfo" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeRecordConstructorInfo.Static : Type * option&lt;bool&gt; -&gt; System.Reflection.ConstructorInfo" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeRecordConstructorInfo.Static (recordType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ConstructorInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeRecordReader.Static">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Core.FSharpFunc&lt;object,object[]&gt; FSharpValue.PreComputeRecordReader.Static (Type recordType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Core.FSharpFunc`2&lt;object, object[]&gt; FSharpValue.PreComputeRecordReader.Static(class System.Type recordType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeRecordReader#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeRecordReader.Static (recordType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As FSharpFunc(Of Object, Object())" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeRecordReader.Static : Type * option&lt;bool&gt; -&gt; (obj -&gt; obj[])" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeRecordReader.Static (recordType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Core.FSharpFunc&lt;System.Object,System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recordType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recordType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeUnionConstructor.Static">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Core.FSharpFunc&lt;object[],object&gt; FSharpValue.PreComputeUnionConstructor.Static (Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Core.FSharpFunc`2&lt;object[], object&gt; FSharpValue.PreComputeUnionConstructor.Static(class Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionConstructor#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeUnionConstructor.Static (unionCase As UnionCaseInfo, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As FSharpFunc(Of Object(), Object)" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeUnionConstructor.Static : Microsoft.FSharp.Reflection.UnionCaseInfo * option&lt;bool&gt; -&gt; (obj[] -&gt; obj)" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeUnionConstructor.Static (unionCase, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Core.FSharpFunc&lt;System.Object[],System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionCase" Type="Microsoft.FSharp.Reflection.UnionCaseInfo" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionCase">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeUnionConstructorInfo.Static">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo FSharpValue.PreComputeUnionConstructorInfo.Static (Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Reflection.MethodInfo FSharpValue.PreComputeUnionConstructorInfo.Static(class Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionConstructorInfo#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeUnionConstructorInfo.Static (unionCase As UnionCaseInfo, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As MethodInfo" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeUnionConstructorInfo.Static : Microsoft.FSharp.Reflection.UnionCaseInfo * option&lt;bool&gt; -&gt; System.Reflection.MethodInfo" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeUnionConstructorInfo.Static (unionCase, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionCase" Type="Microsoft.FSharp.Reflection.UnionCaseInfo" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionCase">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeUnionReader.Static">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Core.FSharpFunc&lt;object,object[]&gt; FSharpValue.PreComputeUnionReader.Static (Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Core.FSharpFunc`2&lt;object, object[]&gt; FSharpValue.PreComputeUnionReader.Static(class Microsoft.FSharp.Reflection.UnionCaseInfo unionCase, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionReader#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeUnionReader.Static (unionCase As UnionCaseInfo, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As FSharpFunc(Of Object, Object())" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeUnionReader.Static : Microsoft.FSharp.Reflection.UnionCaseInfo * option&lt;bool&gt; -&gt; (obj -&gt; obj[])" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeUnionReader.Static (unionCase, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Core.FSharpFunc&lt;System.Object,System.Object[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionCase" Type="Microsoft.FSharp.Reflection.UnionCaseInfo" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionCase">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeUnionTagMemberInfo.Static">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo FSharpValue.PreComputeUnionTagMemberInfo.Static (Type unionType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Reflection.MemberInfo FSharpValue.PreComputeUnionTagMemberInfo.Static(class System.Type unionType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionTagMemberInfo#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeUnionTagMemberInfo.Static (unionType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As MemberInfo" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeUnionTagMemberInfo.Static : Type * option&lt;bool&gt; -&gt; System.Reflection.MemberInfo" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeUnionTagMemberInfo.Static (unionType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FSharpValue.PreComputeUnionTagReader.Static">
      <MemberSignature Language="C#" Value="public static Microsoft.FSharp.Core.FSharpFunc&lt;object,int&gt; FSharpValue.PreComputeUnionTagReader.Static (Type unionType, Microsoft.FSharp.Core.FSharpOption&lt;bool&gt; allowAccessToPrivateRepresentation);" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.FSharp.Core.FSharpFunc`2&lt;object, int32&gt; FSharpValue.PreComputeUnionTagReader.Static(class System.Type unionType, class Microsoft.FSharp.Core.FSharpOption`1&lt;bool&gt; allowAccessToPrivateRepresentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionTagReader#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FSharpValue.PreComputeUnionTagReader.Static (unionType As Type, allowAccessToPrivateRepresentation As FSharpOption(Of Boolean)) As FSharpFunc(Of Object, Integer)" />
      <MemberSignature Language="F#" Value="ReflectionExtensions.FSharpValue.PreComputeUnionTagReader.Static : Type * option&lt;bool&gt; -&gt; (obj -&gt; int)" Usage="Microsoft.FSharp.Reflection.ReflectionExtensions.FSharpValue.PreComputeUnionTagReader.Static (unionType, allowAccessToPrivateRepresentation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.FSharp.Core.FSharpFunc&lt;System.Object,System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionType" Type="System.Type" />
        <Parameter Name="allowAccessToPrivateRepresentation" Type="Microsoft.FSharp.Core.FSharpOption&lt;System.Boolean&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>Microsoft.FSharp.Core.OptionalArgument</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unionType">To be added.</param>
        <param name="allowAccessToPrivateRepresentation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>