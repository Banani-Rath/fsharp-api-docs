<?xml version="1.0" encoding="utf-8"?>
<Framework Name="fsharpcore-dotnet-stable">
  <Namespace Name="Microsoft.FSharp.Collections">
    <Type Name="Microsoft.FSharp.Collections.Array2DModule" Id="T:Microsoft.FSharp.Collections.Array2DModule">
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Base1``1(``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Base2``1(``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Copy``1(``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.CopyTo``1(``0[0:,0:],System.Int32,System.Int32,``0[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Create``1(System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.CreateBased``1(System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Get``1(``0[0:,0:],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Initialize``1(System.Int32,System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0}})" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.InitializeBased``1(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0}})" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}},``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Length1``1(``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Length2``1(``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Rebase``1(``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.Set``1(``0[0:,0:],System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.ZeroCreate``1(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array2DModule.ZeroCreateBased``1(System.Int32,System.Int32,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.Array3DModule" Id="T:Microsoft.FSharp.Collections.Array3DModule">
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Create``1(System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Get``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Initialize``1(System.Int32,System.Int32,System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0}}})" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}}},``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Length1``1(``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Length2``1(``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Length3``1(``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}}},``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.Set``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array3DModule.ZeroCreate``1(System.Int32,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.Array4DModule" Id="T:Microsoft.FSharp.Collections.Array4DModule">
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Create``1(System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Get``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Initialize``1(System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0}}}})" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Length1``1(``0[0:,0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Length2``1(``0[0:,0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Length3``1(``0[0:,0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Length4``1(``0[0:,0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.Set``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.Array4DModule.ZeroCreate``1(System.Int32,System.Int32,System.Int32,System.Int32)" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.ArrayModule" Id="T:Microsoft.FSharp.Collections.ArrayModule">
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.AllPairs``2(``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Append``1(``0[],``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Average``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.AverageBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ChunkBySize``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.CompareWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},``0[],``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Concat``1(System.Collections.Generic.IEnumerable{``0[]})" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Contains``1(``0,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Copy``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.CopyTo``1(``0[],System.Int32,``0[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.CountBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Create``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Distinct``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.DistinctBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Empty``1" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ExactlyOne``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Except``1(System.Collections.Generic.IEnumerable{``0},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Exists2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Fill``1(``0[],System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Find``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.FindBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.FindIndex``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.FindIndexBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Fold2``3(Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},``2,``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},``0[],``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.FoldBack2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``2}}},``0[],``1[],``2)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ForAll2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Get``1(``0[],System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.GetSubArray``1(``0[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.GroupBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Head``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Indexed``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.IsEmpty``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Item``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Iterate2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.IterateIndexed2``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}}},``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Last``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Length``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Map3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0[],``1[],``2[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.MapFold``3(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,System.Tuple{``2,``1}}},``1,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.MapFoldBack``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Tuple{``2,``1}}},``0[],``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.MapIndexed2``3(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Max``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.MaxBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Min``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.MinBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.OfList``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.OfSeq``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Pairwise``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Permute``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.Int32},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Pick``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Reduce``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ReduceBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Replicate``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Reverse``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ScanBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},``0[],``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Set``1(``0[],System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Singleton``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Skip``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SkipWhile``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Sort``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortByDescending``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortDescending``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortInPlace``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortInPlaceBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortInPlaceWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SortWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SplitAt``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SplitInto``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Sum``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.SumBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Tail``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Take``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TakeWhile``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ToList``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ToSeq``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Transpose``1(System.Collections.Generic.IEnumerable{``0[]})" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Truncate``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryFind``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryFindBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryFindIndex``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryFindIndexBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryHead``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryItem``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryLast``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.TryPick``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Unfold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpOption{System.Tuple{``0,``1}}},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Unzip``2(System.Tuple{``0,``1}[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Unzip3``3(System.Tuple{``0,``1,``2}[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Where``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Windowed``1(System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.ZeroCreate``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Zip``2(``0[],``1[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Zip3``3(``0[],``1[],``2[])" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.ArrayModule/Parallel" Id="T:Microsoft.FSharp.Collections.ArrayModule.Parallel">
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1[]},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ArrayModule.Parallel.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},``0[])" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.ComparisonIdentity" Id="T:Microsoft.FSharp.Collections.ComparisonIdentity">
      <Member Id="M:Microsoft.FSharp.Collections.ComparisonIdentity.FromFunction``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}})" />
      <Member Id="M:Microsoft.FSharp.Collections.ComparisonIdentity.NonStructural``1" />
      <Member Id="M:Microsoft.FSharp.Collections.ComparisonIdentity.Structural``1" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.FSharpList`1" Id="T:Microsoft.FSharp.Collections.FSharpList`1">
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.#ctor(`0,Microsoft.FSharp.Collections.FSharpList{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.CompareTo(Microsoft.FSharp.Collections.FSharpList{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.Cons(`0,Microsoft.FSharp.Collections.FSharpList{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.Equals(Microsoft.FSharp.Collections.FSharpList{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.GetSlice(Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpList`1.ToString" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.Empty" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.Head" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.HeadOrDefault" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.IsCons" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.IsEmpty" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.Item(System.Int32)" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.Length" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.Tag" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.Tail" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpList`1.TailOrNull" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.FSharpList`1/Tags" Id="T:Microsoft.FSharp.Collections.FSharpList`1.Tags">
      <Member Id="F:Microsoft.FSharp.Collections.FSharpList`1.Tags.Cons" />
      <Member Id="F:Microsoft.FSharp.Collections.FSharpList`1.Tags.Empty" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.FSharpMap`2" Id="T:Microsoft.FSharp.Collections.FSharpMap`2">
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.Add(`0,`1)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.ContainsKey(`0)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.Remove(`0)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.ToString" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.TryFind(`0)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpMap`2.TryGetValue(`0,`1@)" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpMap`2.Count" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpMap`2.IsEmpty" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpMap`2.Item(`0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.FSharpSet`1" Id="T:Microsoft.FSharp.Collections.FSharpSet`1">
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.Add(`0)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.Contains(`0)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.IsProperSubsetOf(Microsoft.FSharp.Collections.FSharpSet{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.IsProperSupersetOf(Microsoft.FSharp.Collections.FSharpSet{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.IsSubsetOf(Microsoft.FSharp.Collections.FSharpSet{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.IsSupersetOf(Microsoft.FSharp.Collections.FSharpSet{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.op_Addition(Microsoft.FSharp.Collections.FSharpSet{`0},Microsoft.FSharp.Collections.FSharpSet{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.op_Subtraction(Microsoft.FSharp.Collections.FSharpSet{`0},Microsoft.FSharp.Collections.FSharpSet{`0})" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.Remove(`0)" />
      <Member Id="M:Microsoft.FSharp.Collections.FSharpSet`1.ToString" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpSet`1.Count" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpSet`1.IsEmpty" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpSet`1.MaximumElement" />
      <Member Id="P:Microsoft.FSharp.Collections.FSharpSet`1.MinimumElement" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.HashIdentity" Id="T:Microsoft.FSharp.Collections.HashIdentity">
      <Member Id="M:Microsoft.FSharp.Collections.HashIdentity.FromFunctions``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean}})" />
      <Member Id="M:Microsoft.FSharp.Collections.HashIdentity.LimitedStructural``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.HashIdentity.NonStructural``1" />
      <Member Id="M:Microsoft.FSharp.Collections.HashIdentity.Reference``1" />
      <Member Id="M:Microsoft.FSharp.Collections.HashIdentity.Structural``1" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.ListModule" Id="T:Microsoft.FSharp.Collections.ListModule">
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.AllPairs``2(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Average``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.AverageBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ChunkBySize``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Collect``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Collections.FSharpList{``1}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.CompareWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Concat``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Collections.FSharpList{``0}})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Contains``1(``0,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.CountBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Distinct``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.DistinctBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Empty``1" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ExactlyOne``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Except``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Exists2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Find``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.FindBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.FindIndex``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.FindIndexBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Fold2``3(Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},``2,Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Collections.FSharpList{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.FoldBack2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``2}}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1},``2)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ForAll2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Get``1(Microsoft.FSharp.Collections.FSharpList{``0},System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.GroupBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Head``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Indexed``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.IsEmpty``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Item``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Iterate2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.IterateIndexed2``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Last``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Length``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Map3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1},Microsoft.FSharp.Collections.FSharpList{``2})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.MapFold``3(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,System.Tuple{``2,``1}}},``1,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.MapFoldBack``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Tuple{``2,``1}}},Microsoft.FSharp.Collections.FSharpList{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.MapIndexed2``3(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Max``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.MaxBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Min``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.MinBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.OfArray``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.OfSeq``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Pairwise``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Permute``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.Int32},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Pick``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Reduce``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ReduceBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Replicate``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Reverse``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ScanBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Collections.FSharpList{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Singleton``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Skip``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SkipWhile``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Sort``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SortBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SortByDescending``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SortDescending``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SortWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SplitAt``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SplitInto``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Sum``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.SumBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Tail``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Take``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TakeWhile``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ToArray``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.ToSeq``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Transpose``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Collections.FSharpList{``0}})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Truncate``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryFind``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryFindBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryFindIndex``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryFindIndexBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryHead``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryItem``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryLast``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.TryPick``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Unfold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpOption{System.Tuple{``0,``1}}},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Unzip``2(Microsoft.FSharp.Collections.FSharpList{System.Tuple{``0,``1}})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Unzip3``3(Microsoft.FSharp.Collections.FSharpList{System.Tuple{``0,``1,``2}})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Where``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Windowed``1(System.Int32,Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Zip``2(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.ListModule.Zip3``3(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``1},Microsoft.FSharp.Collections.FSharpList{``2})" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.MapModule" Id="T:Microsoft.FSharp.Collections.MapModule">
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Add``2(``0,``1,Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.ContainsKey``2(``0,Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Count``2(Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Empty``2" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Exists``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Find``2(``0,Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.FindKey``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Fold``3(Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},``2,Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.FoldBack``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``2}}},Microsoft.FSharp.Collections.FSharpMap{``0,``1},``2)" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.ForAll``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.IsEmpty``2(Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Iterate``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.OfArray``2(System.Tuple{``0,``1}[])" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.OfList``2(Microsoft.FSharp.Collections.FSharpList{System.Tuple{``0,``1}})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.OfSeq``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Pick``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpOption{``2}}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.Remove``2(``0,Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.ToArray``2(Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.ToList``2(Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.ToSeq``2(Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.TryFind``2(``0,Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.TryFindKey``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.MapModule.TryPick``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpOption{``2}}},Microsoft.FSharp.Collections.FSharpMap{``0,``1})" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.SeqModule" Id="T:Microsoft.FSharp.Collections.SeqModule">
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.AllPairs``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Append``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Average``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.AverageBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Cache``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Cast``1(System.Collections.IEnumerable)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ChunkBySize``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Collect``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.CompareWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Concat``2(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Contains``1(``0,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.CountBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Collections.Generic.IEnumerable{``0}})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Distinct``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.DistinctBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Empty``1" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ExactlyOne``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Exists2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Find``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.FindBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.FindIndex``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.FindIndexBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Fold2``3(Microsoft.FSharp.Core.FSharpFunc{``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},``2,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},System.Collections.Generic.IEnumerable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.FoldBack2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``2}}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},``2)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ForAll2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Boolean}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Get``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.GroupBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Head``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Indexed``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Initialize``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.InitializeInfinite``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Item``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Iterate2``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.IterateIndexed2``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Last``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Length``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Map3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.MapFold``3(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,System.Tuple{``2,``1}}},``1,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.MapFoldBack``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,System.Tuple{``2,``1}}},System.Collections.Generic.IEnumerable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.MapIndexed2``3(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Max``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.MaxBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Min``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.MinBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.OfArray``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.OfList``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Pairwise``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Permute``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.Int32},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Pick``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ReadOnly``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Reduce``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ReduceBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Replicate``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Reverse``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ScanBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},System.Collections.Generic.IEnumerable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Singleton``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Skip``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SkipWhile``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Sort``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SortBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SortByDescending``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SortDescending``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SortWith``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SplitInto``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Sum``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.SumBy``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Tail``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Take``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TakeWhile``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.ToList``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Transpose``2(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Truncate``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryFind``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryFindBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryFindIndex``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryFindIndexBack``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryHead``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryItem``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryLast``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.TryPick``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Unfold``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{System.Tuple{``1,``0}}},``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Where``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Windowed``1(System.Int32,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Zip``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})" />
      <Member Id="M:Microsoft.FSharp.Collections.SeqModule.Zip3``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Collections.Generic.IEnumerable{``2})" />
    </Type>
    <Type Name="Microsoft.FSharp.Collections.SetModule" Id="T:Microsoft.FSharp.Collections.SetModule">
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Add``1(``0,Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Contains``1(``0,Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Count``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Difference``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Empty``1" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Collections.FSharpSet{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Intersect``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.IntersectMany``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Collections.FSharpSet{``0}})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.IsEmpty``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.IsProperSubset``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.IsProperSuperset``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.IsSubset``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.IsSuperset``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.MaxElement``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.MinElement``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.OfArray``1(``0[])" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.OfList``1(Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.OfSeq``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Remove``1(``0,Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Singleton``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.ToArray``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.ToList``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.ToSeq``1(Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.Union``1(Microsoft.FSharp.Collections.FSharpSet{``0},Microsoft.FSharp.Collections.FSharpSet{``0})" />
      <Member Id="M:Microsoft.FSharp.Collections.SetModule.UnionMany``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Collections.FSharpSet{``0}})" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Control">
    <Type Name="Microsoft.FSharp.Control.AsyncActivation`1" Id="T:Microsoft.FSharp.Control.AsyncActivation`1">
      <Member Id="M:Microsoft.FSharp.Control.AsyncActivation`1.OnCancellation" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncActivation`1.OnExceptionRaised" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncActivation`1.OnSuccess(`0)" />
      <Member Id="P:Microsoft.FSharp.Control.AsyncActivation`1.IsCancellationRequested" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.AsyncPrimitives" Id="T:Microsoft.FSharp.Control.AsyncPrimitives">
      <Member Id="M:Microsoft.FSharp.Control.AsyncPrimitives.Bind``2(Microsoft.FSharp.Control.AsyncActivation{``0},Microsoft.FSharp.Control.FSharpAsync{``1},Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvoke``2(Microsoft.FSharp.Control.AsyncActivation{``0},``1,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncPrimitives.Invoke``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Control.AsyncActivation{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncPrimitives.MakeAsync``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.AsyncActivation{``0},Microsoft.FSharp.Control.AsyncReturn})" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncPrimitives.TryFinally``1(Microsoft.FSharp.Control.AsyncActivation{``0},Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Control.AsyncPrimitives.TryWith``1(Microsoft.FSharp.Control.AsyncActivation{``0},Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}})" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.AsyncReturn" Id="T:Microsoft.FSharp.Control.AsyncReturn" />
    <Type Name="Microsoft.FSharp.Control.CommonExtensions" Id="T:Microsoft.FSharp.Control.CommonExtensions">
      <Member Id="M:Microsoft.FSharp.Control.CommonExtensions.AddToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Control.CommonExtensions.AsyncRead(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.CommonExtensions.AsyncReadBytes(System.IO.Stream,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Control.CommonExtensions.AsyncWrite(System.IO.Stream,System.Byte[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.CommonExtensions.SubscribeToObservable``1(System.IObservable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit})" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.EventModule" Id="T:Microsoft.FSharp.Control.EventModule">
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Add``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.IEvent{``1,``0})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Choose``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Control.IEvent{``2,``0})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Filter``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``0})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Merge``3(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Control.IEvent{``2,``1})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Pairwise``2(Microsoft.FSharp.Control.IEvent{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Partition``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Control.IEvent{``1,``0})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Scan``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,Microsoft.FSharp.Control.IEvent{``2,``1})" />
      <Member Id="M:Microsoft.FSharp.Control.EventModule.Split``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},Microsoft.FSharp.Control.IEvent{``3,``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpAsync" Id="T:Microsoft.FSharp.Control.FSharpAsync">
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.AsBeginEnd``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitEvent``2(Microsoft.FSharp.Control.IEvent{``0,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitIAsyncResult(System.IAsyncResult,Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask(System.Threading.Tasks.Task)" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitTask``1(System.Threading.Tasks.Task{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.AwaitWaitHandle(System.Threading.WaitHandle,Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.CancelDefaultToken" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.Catch``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.Choice``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{``0}}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``0},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``2(``0,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``1},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``2},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.FromBeginEnd``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,System.AsyncCallback,System.Object},System.IAsyncResult},Microsoft.FSharp.Core.FSharpFunc{System.IAsyncResult,``3},Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.FromContinuations``1(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.Ignore``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.OnCancel(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.Parallel``1(System.Collections.Generic.IEnumerable{Microsoft.FSharp.Control.FSharpAsync{``0}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.RunSynchronously``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.Sleep(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.Start(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.StartAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.StartChild``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.StartChildAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.Tasks.TaskCreationOptions})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.StartImmediate(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.StartImmediateAsTask``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.StartWithContinuations``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToContext(System.Threading.SynchronizationContext)" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToNewThread" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.SwitchToThreadPool" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsync.TryCancelled``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.OperationCanceledException,Microsoft.FSharp.Core.Unit})" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpAsync.CancellationToken" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpAsync.DefaultCancellationToken" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpAsync`1" Id="T:Microsoft.FSharp.Control.FSharpAsync`1" />
    <Type Name="Microsoft.FSharp.Control.FSharpAsyncBuilder" Id="T:Microsoft.FSharp.Control.FSharpAsyncBuilder">
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Bind``2(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Combine``1(Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Control.FSharpAsync{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Delay``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.For``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Return``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.ReturnFrom``1(Microsoft.FSharp.Control.FSharpAsync{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryFinally``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.TryWith``1(Microsoft.FSharp.Control.FSharpAsync{``0},Microsoft.FSharp.Core.FSharpFunc{System.Exception,Microsoft.FSharp.Control.FSharpAsync{``0}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Control.FSharpAsync{``1}})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.While(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncBuilder.Zero" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1" Id="T:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1">
      <Member Id="M:Microsoft.FSharp.Control.FSharpAsyncReplyChannel`1.Reply(`0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpDelegateEvent`1" Id="T:Microsoft.FSharp.Control.FSharpDelegateEvent`1">
      <Member Id="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.#ctor" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Trigger(System.Object[])" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpDelegateEvent`1.Publish" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpEvent`1" Id="T:Microsoft.FSharp.Control.FSharpEvent`1">
      <Member Id="M:Microsoft.FSharp.Control.FSharpEvent`1.#ctor" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpEvent`1.Trigger(`0)" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpEvent`1.Publish" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpEvent`2" Id="T:Microsoft.FSharp.Control.FSharpEvent`2">
      <Member Id="M:Microsoft.FSharp.Control.FSharpEvent`2.#ctor" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpEvent`2.Trigger(System.Object,`1)" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpEvent`2.Publish" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.FSharpHandler`1" Id="T:Microsoft.FSharp.Control.FSharpHandler`1" />
    <Type Name="Microsoft.FSharp.Control.FSharpMailboxProcessor`1" Id="T:Microsoft.FSharp.Control.FSharpMailboxProcessor`1">
      <Member Id="E:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Error" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.#ctor(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Post(`0)" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.PostAndTryAsyncReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Receive(Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Scan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.Start(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpMailboxProcessor{`0},Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryPostAndReply``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Control.FSharpAsyncReplyChannel{``0},`0},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryReceive(Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.TryScan``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Control.FSharpAsync{``0}}},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.CurrentQueueLength" />
      <Member Id="P:Microsoft.FSharp.Control.FSharpMailboxProcessor`1.DefaultTimeout" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.IDelegateEvent`1" Id="T:Microsoft.FSharp.Control.IDelegateEvent`1">
      <Member Id="M:Microsoft.FSharp.Control.IDelegateEvent`1.AddHandler(`0)" />
      <Member Id="M:Microsoft.FSharp.Control.IDelegateEvent`1.RemoveHandler(`0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.IEvent`2" Id="T:Microsoft.FSharp.Control.IEvent`2" />
    <Type Name="Microsoft.FSharp.Control.LazyExtensions" Id="T:Microsoft.FSharp.Control.LazyExtensions">
      <Member Id="M:Microsoft.FSharp.Control.LazyExtensions.Create``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0})" />
      <Member Id="M:Microsoft.FSharp.Control.LazyExtensions.CreateFromValue``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Control.LazyExtensions.Force``1(System.Lazy{``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.ObservableModule" Id="T:Microsoft.FSharp.Control.ObservableModule">
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Add``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Choose``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Merge``1(System.IObservable{``0},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Pairwise``1(System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Partition``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Scan``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``0}},``0,System.IObservable{``1})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Split``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpChoice{``1,``2}},System.IObservable{``0})" />
      <Member Id="M:Microsoft.FSharp.Control.ObservableModule.Subscribe``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},System.IObservable{``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Control.WebExtensions" Id="T:Microsoft.FSharp.Control.WebExtensions">
      <Member Id="M:Microsoft.FSharp.Control.WebExtensions.AsyncGetResponse(System.Net.WebRequest)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Core">
    <Type Name="Microsoft.FSharp.Core.AbstractClassAttribute" Id="T:Microsoft.FSharp.Core.AbstractClassAttribute">
      <Member Id="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.AllowNullLiteralAttribute" Id="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute">
      <Member Id="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor(System.Boolean)" />
      <Member Id="P:Microsoft.FSharp.Core.AllowNullLiteralAttribute.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.AutoOpenAttribute" Id="T:Microsoft.FSharp.Core.AutoOpenAttribute">
      <Member Id="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.AutoOpenAttribute.Path" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.AutoSerializableAttribute" Id="T:Microsoft.FSharp.Core.AutoSerializableAttribute">
      <Member Id="M:Microsoft.FSharp.Core.AutoSerializableAttribute.#ctor(System.Boolean)" />
      <Member Id="P:Microsoft.FSharp.Core.AutoSerializableAttribute.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ByRefKinds" Id="T:Microsoft.FSharp.Core.ByRefKinds" />
    <Type Name="Microsoft.FSharp.Core.ByRefKinds/In" Id="T:Microsoft.FSharp.Core.ByRefKinds.In" />
    <Type Name="Microsoft.FSharp.Core.ByRefKinds/InOut" Id="T:Microsoft.FSharp.Core.ByRefKinds.InOut" />
    <Type Name="Microsoft.FSharp.Core.ByRefKinds/Out" Id="T:Microsoft.FSharp.Core.ByRefKinds.Out" />
    <Type Name="Microsoft.FSharp.Core.ClassAttribute" Id="T:Microsoft.FSharp.Core.ClassAttribute">
      <Member Id="M:Microsoft.FSharp.Core.ClassAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CLIEventAttribute" Id="T:Microsoft.FSharp.Core.CLIEventAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CLIMutableAttribute" Id="T:Microsoft.FSharp.Core.CLIMutableAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" Id="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute">
      <Member Id="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" Id="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.#ctor(System.Int32[])" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.Counts" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilationMappingAttribute" Id="T:Microsoft.FSharp.Core.CompilationMappingAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(System.String,System.Type[])" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.ResourceName" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SequenceNumber" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SourceConstructFlags" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.TypeDefinitions" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.VariantNumber" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilationRepresentationAttribute" Id="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilationRepresentationAttribute.#ctor(Microsoft.FSharp.Core.CompilationRepresentationFlags)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationRepresentationAttribute.Flags" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilationRepresentationFlags" Id="T:Microsoft.FSharp.Core.CompilationRepresentationFlags">
      <Member Id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Event" />
      <Member Id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Instance" />
      <Member Id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix" />
      <Member Id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.None" />
      <Member Id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Static" />
      <Member Id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.UseNullAsTrueValue" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilationSourceNameAttribute" Id="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilationSourceNameAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilationSourceNameAttribute.SourceName" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompiledNameAttribute" Id="T:Microsoft.FSharp.Core.CompiledNameAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompiledNameAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CompiledNameAttribute.CompiledName" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerMessageAttribute" Id="T:Microsoft.FSharp.Core.CompilerMessageAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilerMessageAttribute.#ctor(System.String,System.Int32)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsError" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsHidden" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.Message" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.MessageNumber" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CustomComparisonAttribute" Id="T:Microsoft.FSharp.Core.CustomComparisonAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CustomEqualityAttribute" Id="T:Microsoft.FSharp.Core.CustomEqualityAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CustomOperationAttribute" Id="T:Microsoft.FSharp.Core.CustomOperationAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CustomOperationAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.AllowIntoPattern" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeGroupJoin" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeJoin" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeZip" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.JoinConditionWord" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpace" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpaceUsingBind" />
      <Member Id="P:Microsoft.FSharp.Core.CustomOperationAttribute.Name" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.DefaultAugmentationAttribute" Id="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute">
      <Member Id="M:Microsoft.FSharp.Core.DefaultAugmentationAttribute.#ctor(System.Boolean)" />
      <Member Id="P:Microsoft.FSharp.Core.DefaultAugmentationAttribute.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.DefaultValueAttribute" Id="T:Microsoft.FSharp.Core.DefaultValueAttribute">
      <Member Id="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor(System.Boolean)" />
      <Member Id="P:Microsoft.FSharp.Core.DefaultValueAttribute.Check" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.EntryPointAttribute" Id="T:Microsoft.FSharp.Core.EntryPointAttribute">
      <Member Id="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.EqualityConditionalOnAttribute" Id="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute">
      <Member Id="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ExperimentalAttribute" Id="T:Microsoft.FSharp.Core.ExperimentalAttribute">
      <Member Id="M:Microsoft.FSharp.Core.ExperimentalAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.ExperimentalAttribute.Message" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ExtraTopLevelOperators" Id="T:Microsoft.FSharp.Core.ExtraTopLevelOperators">
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)" />
      <Member Id="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder" />
      <Member Id="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.query" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ExtraTopLevelOperators/Checked" Id="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked">
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToSByte``1(``0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`2" Id="T:Microsoft.FSharp.Core.FSharpChoice`2">
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.CompareTo(Microsoft.FSharp.Core.FSharpChoice{`0,`1})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.Equals(Microsoft.FSharp.Core.FSharpChoice{`0,`1})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice1Of2(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice2Of2(`1)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`2.IsChoice1Of2" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`2.IsChoice2Of2" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`2.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`2/Choice1Of2" Id="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`2/Choice2Of2" Id="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`2/Tags" Id="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice1Of2" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice2Of2" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`3" Id="T:Microsoft.FSharp.Core.FSharpChoice`3">
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.CompareTo(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.Equals(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice1Of3(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice2Of3(`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice3Of3(`2)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.IsChoice1Of3" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.IsChoice2Of3" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.IsChoice3Of3" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`3/Choice1Of3" Id="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`3/Choice2Of3" Id="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`3/Choice3Of3" Id="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`3/Tags" Id="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice1Of3" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice2Of3" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice3Of3" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`4" Id="T:Microsoft.FSharp.Core.FSharpChoice`4">
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.CompareTo(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.Equals(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice1Of4(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice2Of4(`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice3Of4(`2)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice4Of4(`3)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.IsChoice1Of4" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.IsChoice2Of4" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.IsChoice3Of4" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.IsChoice4Of4" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`4/Choice1Of4" Id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`4/Choice2Of4" Id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`4/Choice3Of4" Id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`4/Choice4Of4" Id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`4/Tags" Id="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice1Of4" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice2Of4" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice3Of4" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice4Of4" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5" Id="T:Microsoft.FSharp.Core.FSharpChoice`5">
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.CompareTo(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3,`4})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.Equals(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3,`4})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice1Of5(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice2Of5(`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice3Of5(`2)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice4Of5(`3)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice5Of5(`4)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.IsChoice1Of5" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.IsChoice2Of5" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.IsChoice3Of5" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.IsChoice4Of5" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.IsChoice5Of5" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5/Choice1Of5" Id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5/Choice2Of5" Id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5/Choice3Of5" Id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5/Choice4Of5" Id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5/Choice5Of5" Id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`5/Tags" Id="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice1Of5" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice2Of5" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice3Of5" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice4Of5" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice5Of5" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6">
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.CompareTo(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3,`4,`5})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.Equals(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3,`4,`5})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice1Of6(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice2Of6(`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice3Of6(`2)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice4Of6(`3)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice5Of6(`4)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice6Of6(`5)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.IsChoice1Of6" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.IsChoice2Of6" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.IsChoice3Of6" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.IsChoice4Of6" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.IsChoice5Of6" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.IsChoice6Of6" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Choice1Of6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Choice2Of6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Choice3Of6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Choice4Of6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Choice5Of6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Choice6Of6" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`6/Tags" Id="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice1Of6" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice2Of6" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice3Of6" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice4Of6" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice5Of6" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice6Of6" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7">
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.CompareTo(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3,`4,`5,`6})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.Equals(Microsoft.FSharp.Core.FSharpChoice{`0,`1,`2,`3,`4,`5,`6})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice1Of7(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice2Of7(`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice3Of7(`2)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice4Of7(`3)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice5Of7(`4)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice6Of7(`5)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice7Of7(`6)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice1Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice2Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice3Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice4Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice5Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice6Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.IsChoice7Of7" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice1Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice2Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice3Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice4Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice5Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice6Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Choice7Of7" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7">
      <Member Id="P:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7.Item" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpChoice`7/Tags" Id="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice1Of7" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice2Of7" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice3Of7" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice4Of7" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice5Of7" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice6Of7" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice7Of7" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpFunc`2" Id="T:Microsoft.FSharp.Core.FSharpFunc`2">
      <Member Id="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" Id="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute">
      <Member Id="M:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Major" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Minor" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Release" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpOption`1" Id="T:Microsoft.FSharp.Core.FSharpOption`1">
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.#ctor(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.CompareTo(Microsoft.FSharp.Core.FSharpOption{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.Equals(Microsoft.FSharp.Core.FSharpOption{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.GetTag(Microsoft.FSharp.Core.FSharpOption{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.op_Implicit(`0)~Microsoft.FSharp.Core.FSharpOption{`0}" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.Some(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpOption`1.ToString" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpOption`1.None" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpOption`1.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpOption`1/Tags" Id="T:Microsoft.FSharp.Core.FSharpOption`1.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.None" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.Some" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpRef`1" Id="T:Microsoft.FSharp.Core.FSharpRef`1">
      <Member Id="F:Microsoft.FSharp.Core.FSharpRef`1.contents@" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.#ctor(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.CompareTo(Microsoft.FSharp.Core.FSharpRef{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.Equals(Microsoft.FSharp.Core.FSharpRef{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpRef`1.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpRef`1.contents" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpRef`1.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpResult`2" Id="T:Microsoft.FSharp.Core.FSharpResult`2">
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.CompareTo(Microsoft.FSharp.Core.FSharpResult{`0,`1})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.Equals(Microsoft.FSharp.Core.FSharpResult{`0,`1})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.NewError(`1)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpResult`2.NewOk(`0)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpResult`2.ErrorValue" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpResult`2.IsError" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpResult`2.IsOk" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpResult`2.ResultValue" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpResult`2.Tag" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpResult`2/Tags" Id="T:Microsoft.FSharp.Core.FSharpResult`2.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpResult`2.Tags.Error" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpResult`2.Tags.Ok" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpTypeFunc" Id="T:Microsoft.FSharp.Core.FSharpTypeFunc">
      <Member Id="M:Microsoft.FSharp.Core.FSharpTypeFunc.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpTypeFunc.Specialize``1" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpValueOption`1" Id="T:Microsoft.FSharp.Core.FSharpValueOption`1">
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.CompareTo(Microsoft.FSharp.Core.FSharpValueOption{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.CompareTo(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.CompareTo(System.Object,System.Collections.IComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.Equals(Microsoft.FSharp.Core.FSharpValueOption{`0})" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.FSharpValueOption`1.NewValueSome(`0)" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpValueOption`1.IsValueNone" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpValueOption`1.IsValueSome" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpValueOption`1.Item" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpValueOption`1.Tag" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpValueOption`1.Value" />
      <Member Id="P:Microsoft.FSharp.Core.FSharpValueOption`1.ValueNone" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FSharpValueOption`1/Tags" Id="T:Microsoft.FSharp.Core.FSharpValueOption`1.Tags">
      <Member Id="F:Microsoft.FSharp.Core.FSharpValueOption`1.Tags.ValueNone" />
      <Member Id="F:Microsoft.FSharp.Core.FSharpValueOption`1.Tags.ValueSome" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.FuncConvert" Id="T:Microsoft.FSharp.Core.FuncConvert">
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromAction(System.Action)" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromAction``1(System.Action{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromAction``2(System.Action{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromAction``3(System.Action{``0,``1,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromAction``4(System.Action{``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromAction``5(System.Action{``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromFunc``1(System.Func{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromFunc``2(System.Func{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromFunc``3(System.Func{``0,``1,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromFunc``4(System.Func{``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromFunc``5(System.Func{``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FromFunc``6(System.Func{``0,``1,``2,``3,``4,``5})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
      <Member Id="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.GeneralizableValueAttribute" Id="T:Microsoft.FSharp.Core.GeneralizableValueAttribute">
      <Member Id="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.InterfaceAttribute" Id="T:Microsoft.FSharp.Core.InterfaceAttribute">
      <Member Id="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.LanguagePrimitives" Id="T:Microsoft.FSharp.Core.LanguagePrimitives">
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.DecimalWithMeasure(System.Decimal)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByInt``1(``0,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByIntDynamic``1(``0,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumOfValue``2(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumToValue``2(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparer``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparerFromTable``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparer``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparerFromTable``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastLimitedGenericEqualityComparer``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.Float32WithMeasure(System.Single)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.FloatWithMeasure(System.Double)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparison``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparisonWithComparer``1(System.Collections.IComparer,``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEquality``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityER``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityWithComparer``1(System.Collections.IEqualityComparer,``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterOrEqual``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterThan``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHash``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHashWithComparer``1(System.Collections.IEqualityComparer,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessOrEqual``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessThan``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLimitedHash``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOne``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOneDynamic``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZero``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZeroDynamic``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.Int16WithMeasure(System.Int16)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.Int32WithMeasure(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.Int64WithMeasure(System.Int64)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt32(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt64(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt32(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt64(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalEquality``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalHash``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.SByteWithMeasure(System.SByte)" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparer" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityComparer" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityERComparer" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.LanguagePrimitives/ErrorStrings" Id="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings">
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.AddressOpNotFirstClassString" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputArrayEmptyString" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputMustBeNonNegativeString" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputSequenceEmptyString" />
      <Member Id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.NoNegateMinValueString" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.LanguagePrimitives/HashCompare" Id="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare">
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicFunctions" Id="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions">
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CheckThis``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CreateInstance``1" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.Dispose``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailInit" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailStaticInit" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray``1(``0[],System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray2D``1(``0[0:,0:],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetString(System.String,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.MakeDecimal(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray``1(``0[],System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray2D``1(``0[0:,0:],System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestFast``1(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestGeneric``1(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxFast``1(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxGeneric``1(System.Object)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.LanguagePrimitives/IntrinsicOperators" Id="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators">
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_AddressOf``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_Amp(System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanAnd(System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanOr(System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_IntegerAddressOf``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.Or(System.Boolean,System.Boolean)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.LiteralAttribute" Id="T:Microsoft.FSharp.Core.LiteralAttribute">
      <Member Id="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.MatchFailureException" Id="T:Microsoft.FSharp.Core.MatchFailureException">
      <Member Id="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.String,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.MatchFailureException.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.MatchFailureException.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <Member Id="M:Microsoft.FSharp.Core.MatchFailureException.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Core.MatchFailureException.GetHashCode(System.Collections.IEqualityComparer)" />
      <Member Id="P:Microsoft.FSharp.Core.MatchFailureException.Data0" />
      <Member Id="P:Microsoft.FSharp.Core.MatchFailureException.Data1" />
      <Member Id="P:Microsoft.FSharp.Core.MatchFailureException.Data2" />
      <Member Id="P:Microsoft.FSharp.Core.MatchFailureException.Message" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" Id="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute">
      <Member Id="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.MeasureAttribute" Id="T:Microsoft.FSharp.Core.MeasureAttribute">
      <Member Id="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.NoComparisonAttribute" Id="T:Microsoft.FSharp.Core.NoComparisonAttribute">
      <Member Id="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.NoDynamicInvocationAttribute" Id="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute">
      <Member Id="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.NoEqualityAttribute" Id="T:Microsoft.FSharp.Core.NoEqualityAttribute">
      <Member Id="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.NumericLiterals" Id="T:Microsoft.FSharp.Core.NumericLiterals" />
    <Type Name="Microsoft.FSharp.Core.NumericLiterals/NumericLiteralI" Id="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI">
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt32``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64``1(System.Int64)" />
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64Dynamic(System.Int64)" />
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromOne``1" />
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromString``1(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromStringDynamic(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromZero``1" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.Operators" Id="T:Microsoft.FSharp.Core.Operators">
      <Member Id="M:Microsoft.FSharp.Core.Operators.Abs``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Acos``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Asin``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Atan``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Box``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ConsoleError``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ConsoleIn``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ConsoleOut``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Cos``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.DefaultValueArg``1(Microsoft.FSharp.Core.FSharpValueOption{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Exp``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Failure(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.FailWith``1(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Floor``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Hash``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Identity``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Ignore``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.IsNull``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Log``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Log10``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Not(System.Boolean)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NullArg``1(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Ref``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Reraise``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Rethrow``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Round``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Sign``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Sin``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.SizeOf``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Tan``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToChar``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToDouble``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToInt``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToInt16``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToInt32``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToInt64``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToSByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToSingle``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToString``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.TypeDefOf``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.TypeOf``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      <Member Id="P:Microsoft.FSharp.Core.Operators.Infinity" />
      <Member Id="P:Microsoft.FSharp.Core.Operators.InfinitySingle" />
      <Member Id="P:Microsoft.FSharp.Core.Operators.NaN" />
      <Member Id="P:Microsoft.FSharp.Core.Operators.NaNSingle" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.Operators/Checked" Id="T:Microsoft.FSharp.Core.Operators.Checked">
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.op_UnaryNegation``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToChar``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt16``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt32``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt64``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToIntPtr``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToSByte``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt16``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt32``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt64``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Checked.ToUIntPtr``1(``0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.Operators/NonStructuralComparison" Id="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison">
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Compare``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Hash``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Equality``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThan``2(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThanOrEqual``2(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Inequality``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThan``2(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThanOrEqual``2(``0,``1)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.Operators/OperatorIntrinsics" Id="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics">
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AbsDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AcosDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AsinDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AtanDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CeilingDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CosDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CoshDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.ExpDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.FloorDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetStringSlice(System.String,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Log10Dynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.LogDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowByte(System.Byte,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDecimal(System.Decimal,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDouble(System.Double,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt16(System.Int16,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt32(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt64(System.Int64,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowIntPtr(System.IntPtr,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSByte(System.SByte,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSingle(System.Single,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt16(System.UInt16,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt32(System.UInt32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt64(System.UInt64,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUIntPtr(System.UIntPtr,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeByte(System.Byte,System.Byte,System.Byte)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeChar(System.Char,System.Char)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeDouble(System.Double,System.Double,System.Double)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt16(System.Int16,System.Int16,System.Int16)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt32(System.Int32,System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt64(System.Int64,System.Int64,System.Int64)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeIntPtr(System.IntPtr,System.IntPtr,System.IntPtr)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSByte(System.SByte,System.SByte,System.SByte)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSingle(System.Single,System.Single,System.Single)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt16(System.UInt16,System.UInt16,System.UInt16)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt32(System.UInt32,System.UInt32,System.UInt32)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt64(System.UInt64,System.UInt64,System.UInt64)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUIntPtr(System.UIntPtr,System.UIntPtr,System.UIntPtr)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RoundDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32,``0[])" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:,0:])" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SignDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinhDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SqrtDynamic``2(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanhDynamic``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TruncateDynamic``1(``0)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.Operators/Unchecked" Id="T:Microsoft.FSharp.Core.Operators.Unchecked">
      <Member Id="M:Microsoft.FSharp.Core.Operators.Unchecked.Compare``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Unchecked.DefaultOf``1" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Unchecked.Equals``1(``0,``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Unchecked.Hash``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.Operators.Unchecked.Unbox``1(System.Object)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.OptimizedClosures" Id="T:Microsoft.FSharp.Core.OptimizedClosures" />
    <Type Name="Microsoft.FSharp.Core.OptimizedClosures/FSharpFunc`3" Id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3">
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,`2}})" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0,`1)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.OptimizedClosures/FSharpFunc`4" Id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4">
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,`3}}})" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0,`1,`2)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.OptimizedClosures/FSharpFunc`5" Id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5">
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.OptimizedClosures/FSharpFunc`6" Id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6">
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,Microsoft.FSharp.Core.FSharpFunc{`4,`5}}}}})" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0)" />
      <Member Id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0,`1,`2,`3,`4)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.OptionalArgumentAttribute" Id="T:Microsoft.FSharp.Core.OptionalArgumentAttribute">
      <Member Id="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.OptionModule" Id="T:Microsoft.FSharp.Core.OptionModule">
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Contains``1(``0,Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Count``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.DefaultValue``1(``0,Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.DefaultWith``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Flatten``1(Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Core.FSharpOption{``0}})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.GetValue``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.IsNone``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.IsSome``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Map2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpOption{``1})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.Map3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpOption{``1},Microsoft.FSharp.Core.FSharpOption{``2})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.OfNullable``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.OfObj``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.OrElse``1(Microsoft.FSharp.Core.FSharpOption{``0},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.OrElseWith``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.FSharpOption{``0}},Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.ToArray``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.ToList``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.ToNullable``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      <Member Id="M:Microsoft.FSharp.Core.OptionModule.ToObj``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.PrintfFormat`4" Id="T:Microsoft.FSharp.Core.PrintfFormat`4">
      <Member Id="M:Microsoft.FSharp.Core.PrintfFormat`4.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.PrintfFormat`4.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.PrintfFormat`5" Id="T:Microsoft.FSharp.Core.PrintfFormat`5">
      <Member Id="M:Microsoft.FSharp.Core.PrintfFormat`5.#ctor(System.String)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.PrintfModule" Id="T:Microsoft.FSharp.Core.PrintfModule">
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilder``1(System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``0,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ProjectionParameterAttribute" Id="T:Microsoft.FSharp.Core.ProjectionParameterAttribute">
      <Member Id="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ReferenceEqualityAttribute" Id="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute">
      <Member Id="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ReflectedDefinitionAttribute" Id="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute">
      <Member Id="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor(System.Boolean)" />
      <Member Id="P:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.IncludeValue" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" Id="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute">
      <Member Id="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" Id="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute">
      <Member Id="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.ResultModule" Id="T:Microsoft.FSharp.Core.ResultModule">
      <Member Id="M:Microsoft.FSharp.Core.ResultModule.Bind``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpResult{``1,``2}},Microsoft.FSharp.Core.FSharpResult{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.ResultModule.Map``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpResult{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Core.ResultModule.MapError``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpResult{``2,``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.SealedAttribute" Id="T:Microsoft.FSharp.Core.SealedAttribute">
      <Member Id="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.SealedAttribute.#ctor(System.Boolean)" />
      <Member Id="P:Microsoft.FSharp.Core.SealedAttribute.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.SourceConstructFlags" Id="T:Microsoft.FSharp.Core.SourceConstructFlags">
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.Closure" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.Exception" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.Field" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.KindMask" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.Module" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.None" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.NonPublicRepresentation" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.ObjectType" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.RecordType" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.SumType" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.UnionCase" />
      <Member Id="F:Microsoft.FSharp.Core.SourceConstructFlags.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.StringModule" Id="T:Microsoft.FSharp.Core.StringModule">
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Length(System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)" />
      <Member Id="M:Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.StructAttribute" Id="T:Microsoft.FSharp.Core.StructAttribute">
      <Member Id="M:Microsoft.FSharp.Core.StructAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.StructuralComparisonAttribute" Id="T:Microsoft.FSharp.Core.StructuralComparisonAttribute">
      <Member Id="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.StructuralEqualityAttribute" Id="T:Microsoft.FSharp.Core.StructuralEqualityAttribute">
      <Member Id="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" Id="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute">
      <Member Id="M:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.Value" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.Unit" Id="T:Microsoft.FSharp.Core.Unit">
      <Member Id="M:Microsoft.FSharp.Core.Unit.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Core.Unit.GetHashCode" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.UnverifiableAttribute" Id="T:Microsoft.FSharp.Core.UnverifiableAttribute">
      <Member Id="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.VolatileFieldAttribute" Id="T:Microsoft.FSharp.Core.VolatileFieldAttribute">
      <Member Id="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Core.CompilerServices">
    <Type Name="Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1" Id="T:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.Close" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.GenerateNext(System.Collections.Generic.IEnumerable{`0}@)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.GetFreshEnumerator" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.CheckClose" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.LastGenerated" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace" Id="T:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.GetNestedNamespaces" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.GetTypes" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.ResolveTypeName(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.IProvidedNamespace.NamespaceName" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.ITypeProvider" Id="T:Microsoft.FSharp.Core.CompilerServices.ITypeProvider">
      <Member Id="E:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.Invalidate" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.add_Invalidate(System.EventHandler)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.ApplyStaticArguments(System.Type,System.String[],System.Object[])" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.GetGeneratedAssemblyContents(System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.GetInvokerExpression(System.Reflection.MethodBase,Microsoft.FSharp.Quotations.FSharpExpr[])" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.GetNamespaces" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.GetStaticParameters(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider.remove_Invalidate(System.EventHandler)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.ITypeProvider2" Id="T:Microsoft.FSharp.Core.CompilerServices.ITypeProvider2">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider2.ApplyStaticArgumentsForMethod(System.Reflection.MethodBase,System.String,System.Object[])" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.ITypeProvider2.GetStaticParametersForMethod(System.Reflection.MethodBase)" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.MeasureInverse`1" Id="T:Microsoft.FSharp.Core.CompilerServices.MeasureInverse`1" />
    <Type Name="Microsoft.FSharp.Core.CompilerServices.MeasureOne" Id="T:Microsoft.FSharp.Core.CompilerServices.MeasureOne" />
    <Type Name="Microsoft.FSharp.Core.CompilerServices.MeasureProduct`2" Id="T:Microsoft.FSharp.Core.CompilerServices.MeasureProduct`2" />
    <Type Name="Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers" Id="T:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.CreateEvent``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.FSharpFunc{System.Object,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.Unit}},``0})" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateFromFunctions``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateThenFinally``1(System.Collections.Generic.IEnumerable{``0},Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateUsing``3(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.RuntimeHelpers.EnumerateWhile``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,System.Boolean},System.Collections.Generic.IEnumerable{``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderAssemblyAttribute" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderAssemblyAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderAssemblyAttribute.#ctor" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderAssemblyAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderAssemblyAttribute.AssemblyName" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderAttribute" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.#ctor(Microsoft.FSharp.Core.FSharpFunc{System.String,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.SystemRuntimeContainsType(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.IsHostedExecution" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.IsInvalidationSupported" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.ReferencedAssemblies" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.ResolutionFolder" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.RuntimeAssembly" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.SystemRuntimeAssemblyVersion" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderConfig.TemporaryFolder" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute.#ctor" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute.Column" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute.FilePath" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderDefinitionLocationAttribute.Line" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderEditorHideMethodsAttribute" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderEditorHideMethodsAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderEditorHideMethodsAttribute.#ctor" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderTypeAttributes" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderTypeAttributes">
      <Member Id="F:Microsoft.FSharp.Core.CompilerServices.TypeProviderTypeAttributes.IsErased" />
      <Member Id="F:Microsoft.FSharp.Core.CompilerServices.TypeProviderTypeAttributes.SuppressRelocate" />
    </Type>
    <Type Name="Microsoft.FSharp.Core.CompilerServices.TypeProviderXmlDocAttribute" Id="T:Microsoft.FSharp.Core.CompilerServices.TypeProviderXmlDocAttribute">
      <Member Id="M:Microsoft.FSharp.Core.CompilerServices.TypeProviderXmlDocAttribute.#ctor(System.String)" />
      <Member Id="P:Microsoft.FSharp.Core.CompilerServices.TypeProviderXmlDocAttribute.CommentText" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames">
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.ampere" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.ampere" />
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.candela" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.candela" />
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.kelvin" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.kelvin" />
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.kilogram" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.kilogram" />
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.metre" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.metre" />
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.mole" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.mole" />
    <Type Name="Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.second" Id="T:Microsoft.FSharp.Data.UnitSystems.SI.UnitNames.second" />
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Linq">
    <Type Name="Microsoft.FSharp.Linq.NullableModule" Id="T:Microsoft.FSharp.Linq.NullableModule">
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToByte``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToChar``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToDecimal``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToDouble``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToEnum``1(System.Nullable{System.Int32})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToFloat``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToFloat32``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToInt``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToInt16``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToInt32``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToInt64``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToInt8``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToIntPtr``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToSByte``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToSingle``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt16``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt32``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt64``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt8``1(System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableModule.ToUIntPtr``1(System.Nullable{``0})" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.NullableOperators" Id="T:Microsoft.FSharp.Linq.NullableOperators">
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_EqualsQmark``1(``0,System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterEqualsQmark``1(``0,System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterQmark``1(``0,System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_LessEqualsQmark``1(``0,System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_LessGreaterQmark``1(``0,System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_LessQmark``1(``0,System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEquals``1(System.Nullable{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreater``1(System.Nullable{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEquals``1(System.Nullable{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLess``1(System.Nullable{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEquals``1(System.Nullable{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreater``1(System.Nullable{``0},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessQmark``1(System.Nullable{``0},System.Nullable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)" />
      <Member Id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.QueryBuilder" Id="T:Microsoft.FSharp.Linq.QueryBuilder">
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.#ctor" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Count``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Quote``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Run``1(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Linq.IQueryable}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      <Member Id="M:Microsoft.FSharp.Linq.QueryBuilder.Zero``2" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.QuerySource`2" Id="T:Microsoft.FSharp.Linq.QuerySource`2">
      <Member Id="M:Microsoft.FSharp.Linq.QuerySource`2.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="P:Microsoft.FSharp.Linq.QuerySource`2.Source" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Linq.QueryRunExtensions">
    <Type Name="Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority" Id="T:Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority">
      <Member Id="M:Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority.RunQueryAsEnumerable``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Collections.IEnumerable}})" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority" Id="T:Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority">
      <Member Id="M:Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority.RunQueryAsValue``1(Microsoft.FSharp.Linq.QueryBuilder,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Linq.RuntimeHelpers">
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`1" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`1">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`1.#ctor(`0)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`1.Item1" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`2" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`2">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`2.#ctor(`0,`1)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`2.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`2.Item2" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`3" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`3">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`3.#ctor(`0,`1,`2)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`3.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`3.Item2" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`3.Item3" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4.#ctor(`0,`1,`2,`3)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4.Item2" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4.Item3" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`4.Item4" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5.#ctor(`0,`1,`2,`3,`4)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5.Item2" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5.Item3" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5.Item4" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`5.Item5" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.#ctor(`0,`1,`2,`3,`4,`5)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.Item2" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.Item3" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.Item4" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.Item5" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`6.Item6" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.#ctor(`0,`1,`2,`3,`4,`5,`6)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item2" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item3" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item4" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item5" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item6" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`7.Item7" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item1" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item2" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item3" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item4" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item5" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item6" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item7" />
      <Member Id="P:Microsoft.FSharp.Linq.RuntimeHelpers.AnonymousObject`8.Item8" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.Grouping`2" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.Grouping`2">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.Grouping`2.#ctor(`0,System.Collections.Generic.IEnumerable{`1})" />
    </Type>
    <Type Name="Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter" Id="T:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter">
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.EvaluateQuotation(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.ImplicitExpressionConversionHelper``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.MemberInitializationHelper``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.NewAnonymousObjectHelper``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.QuotationToExpression(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.QuotationToLambdaExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.SubstHelper``1(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar[],System.Object[])" />
      <Member Id="M:Microsoft.FSharp.Linq.RuntimeHelpers.LeafExpressionConverter.SubstHelperRaw(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar[],System.Object[])" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.NativeInterop">
    <Type Name="Microsoft.FSharp.NativeInterop.NativePtrModule" Id="T:Microsoft.FSharp.NativeInterop.NativePtrModule">
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.AddPointerInlined``1(System.IntPtr,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.GetPointerInlined``1(System.IntPtr,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.OfNativeIntInlined``1(System.IntPtr)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.OfVoidPtrInlined``1(System.Void*)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.ReadPointerInlined``1(System.IntPtr)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.SetPointerInlined``1(System.IntPtr,System.Int32,``0)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.StackAllocate``1(System.Int32)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.ToByRefInlined``1(System.IntPtr)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.ToNativeIntInlined``1(System.IntPtr)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.ToVoidPtrInlined``1(System.IntPtr)" />
      <Member Id="M:Microsoft.FSharp.NativeInterop.NativePtrModule.WritePointerInlined``1(System.IntPtr,``0)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Quotations">
    <Type Name="Microsoft.FSharp.Quotations.DerivedPatternsModule" Id="T:Microsoft.FSharp.Quotations.DerivedPatternsModule">
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.AndAlsoPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.ApplicationsPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BoolPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BytePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.CharPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DecimalPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DoublePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.LambdasPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.MethodWithReflectedDefinitionPattern(System.Reflection.MethodBase)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.OrElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertyGetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertySetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SBytePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SinglePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SpecificCallPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.StringPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UnitPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
    </Type>
    <Type Name="Microsoft.FSharp.Quotations.ExprShapeModule" Id="T:Microsoft.FSharp.Quotations.ExprShapeModule">
      <Member Id="M:Microsoft.FSharp.Quotations.ExprShapeModule.RebuildShapeCombination(System.Object,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.ExprShapeModule.ShapePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
    </Type>
    <Type Name="Microsoft.FSharp.Quotations.FSharpExpr" Id="T:Microsoft.FSharp.Quotations.FSharpExpr">
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
      <Member Id="P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes" />
      <Member Id="P:Microsoft.FSharp.Quotations.FSharpExpr.Type" />
    </Type>
    <Type Name="Microsoft.FSharp.Quotations.FSharpExpr`1" Id="T:Microsoft.FSharp.Quotations.FSharpExpr`1">
      <Member Id="P:Microsoft.FSharp.Quotations.FSharpExpr`1.Raw" />
    </Type>
    <Type Name="Microsoft.FSharp.Quotations.FSharpVar" Id="T:Microsoft.FSharp.Quotations.FSharpVar">
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpVar.#ctor(System.String,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpVar.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpVar.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpVar.Global(System.String,System.Type)" />
      <Member Id="M:Microsoft.FSharp.Quotations.FSharpVar.ToString" />
      <Member Id="P:Microsoft.FSharp.Quotations.FSharpVar.IsMutable" />
      <Member Id="P:Microsoft.FSharp.Quotations.FSharpVar.Name" />
      <Member Id="P:Microsoft.FSharp.Quotations.FSharpVar.Type" />
    </Type>
    <Type Name="Microsoft.FSharp.Quotations.PatternsModule" Id="T:Microsoft.FSharp.Quotations.PatternsModule">
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      <Member Id="M:Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.FSharp.Reflection">
    <Type Name="Microsoft.FSharp.Reflection.FSharpReflectionExtensions" Id="T:Microsoft.FSharp.Reflection.FSharpReflectionExtensions">
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#GetExceptionFields#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#GetRecordFields#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#GetUnionCases#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#IsExceptionRepresentation#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#IsRecord#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpType#IsUnion#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#GetExceptionFields#Static(System.Object,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#GetRecordFields#Static(System.Object,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#GetUnionFields#Static(System.Object,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#MakeRecord#Static(System.Type,System.Object[],Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#MakeUnion#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,System.Object[],Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeRecordConstructor#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeRecordConstructorInfo#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeRecordReader#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionConstructor#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionConstructorInfo#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionReader#Static(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionTagMemberInfo#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpReflectionExtensions.FSharpValue#PreComputeUnionTagReader#Static(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
    </Type>
    <Type Name="Microsoft.FSharp.Reflection.FSharpType" Id="T:Microsoft.FSharp.Reflection.FSharpType">
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.GetExceptionFields(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.GetFunctionElements(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.GetRecordFields(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.GetTupleElements(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.GetUnionCases(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.IsExceptionRepresentation(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.IsFunction(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.IsModule(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.IsRecord(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.IsTuple(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.IsUnion(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.MakeFunctionType(System.Type,System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.MakeStructTupleType(System.Reflection.Assembly,System.Type[])" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.MakeTupleType(System.Reflection.Assembly,System.Type[])" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpType.MakeTupleType(System.Type[])" />
    </Type>
    <Type Name="Microsoft.FSharp.Reflection.FSharpValue" Id="T:Microsoft.FSharp.Reflection.FSharpValue">
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.GetExceptionFields(System.Object,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.GetRecordField(System.Object,System.Reflection.PropertyInfo)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.GetRecordFields(System.Object,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.GetTupleField(System.Object,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.GetTupleFields(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.GetUnionFields(System.Object,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.MakeFunction(System.Type,Microsoft.FSharp.Core.FSharpFunc{System.Object,System.Object})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.MakeRecord(System.Type,System.Object[],Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.MakeTuple(System.Object[],System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.MakeUnion(Microsoft.FSharp.Reflection.UnionCaseInfo,System.Object[],Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeRecordConstructor(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeRecordConstructorInfo(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeRecordFieldReader(System.Reflection.PropertyInfo)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeRecordReader(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeTupleConstructor(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeTupleConstructorInfo(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeTuplePropertyInfo(System.Type,System.Int32)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeTupleReader(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeUnionConstructor(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeUnionConstructorInfo(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeUnionReader(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeUnionTagMemberInfo(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
      <Member Id="M:Microsoft.FSharp.Reflection.FSharpValue.PreComputeUnionTagReader(System.Type,Microsoft.FSharp.Core.FSharpOption{System.Reflection.BindingFlags})" />
    </Type>
    <Type Name="Microsoft.FSharp.Reflection.UnionCaseInfo" Id="T:Microsoft.FSharp.Reflection.UnionCaseInfo">
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.GetCustomAttributes" />
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.GetCustomAttributes(System.Type)" />
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.GetCustomAttributesData" />
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.GetFields" />
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.GetHashCode" />
      <Member Id="M:Microsoft.FSharp.Reflection.UnionCaseInfo.ToString" />
      <Member Id="P:Microsoft.FSharp.Reflection.UnionCaseInfo.DeclaringType" />
      <Member Id="P:Microsoft.FSharp.Reflection.UnionCaseInfo.Name" />
      <Member Id="P:Microsoft.FSharp.Reflection.UnionCaseInfo.Tag" />
    </Type>
  </Namespace>
</Framework>