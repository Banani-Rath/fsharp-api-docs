<Type Name="ComparisonIdentity" FullName="Microsoft.FSharp.Collections.ComparisonIdentity">
  <TypeSignature Language="C#" Value="public static class ComparisonIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ComparisonIdentity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Collections.ComparisonIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ComparisonIdentity" />
  <TypeSignature Language="F#" Value="module ComparisonIdentity" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Common notions of comparison identity used with sorted data structures.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FromFunction&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IComparer&lt;T&gt; FromFunction&lt;T&gt; (Microsoft.FSharp.Core.FSharpFunc&lt;T,Microsoft.FSharp.Core.FSharpFunc&lt;T,int&gt;&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IComparer`1&lt;!!T&gt; FromFunction&lt;T&gt;(class Microsoft.FSharp.Core.FSharpFunc`2&lt;!!T, class Microsoft.FSharp.Core.FSharpFunc`2&lt;!!T, int32&gt;&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.ComparisonIdentity.FromFunction``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,System.Int32}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFunction(Of T) (comparer As FSharpFunc(Of T, FSharpFunc(Of T, Integer))) As IComparer(Of T)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.ComparisonIdentity.FromFunction : ('T -&gt; 'T -&gt; int) -&gt; System.Collections.Generic.IComparer&lt;'T&gt;" Usage="Microsoft.FSharp.Collections.ComparisonIdentity.FromFunction comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="comparer" Type="Microsoft.FSharp.Core.FSharpFunc&lt;T,Microsoft.FSharp.Core.FSharpFunc&lt;T,System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="comparer">A function to compare two values.</param>
        <summary>Compare using the given comparer function.</summary>
        <returns>An object implementing IComparer using the supplied comparer.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonStructural&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IComparer&lt;T&gt; NonStructural&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IComparer`1&lt;!!T&gt; NonStructural&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.ComparisonIdentity.NonStructural``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NonStructural(Of T) () As IComparer(Of T)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.ComparisonIdentity.NonStructural : unit -&gt; System.Collections.Generic.IComparer&lt;'T&gt;" Usage="Microsoft.FSharp.Collections.ComparisonIdentity.NonStructural " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>Non-structural comparison.  Compare using NonStructuralComparison.compare.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Structural&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IComparer&lt;T&gt; Structural&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IComparer`1&lt;!!T&gt; Structural&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.ComparisonIdentity.Structural``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Structural(Of T) () As IComparer(Of T)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.ComparisonIdentity.Structural : unit -&gt; System.Collections.Generic.IComparer&lt;'T&gt;" Usage="Microsoft.FSharp.Collections.ComparisonIdentity.Structural " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <summary>Structural comparison.  Compare using Operators.compare.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>