<Type Name="Array3DModule" FullName="Microsoft.FSharp.Collections.Array3DModule">
  <TypeSignature Language="C#" Value="public static class Array3DModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Array3DModule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Collections.Array3DModule" />
  <TypeSignature Language="VB.NET" Value="Public Class Array3DModule" />
  <TypeSignature Language="F#" Value="module Array3D" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.4.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.Module)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationRepresentation(Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.RequireQualifiedAccess</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Basic operations on rank 3 arrays.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[,,] Create&lt;T&gt; (int length1, int length2, int length3, T initial);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!T[,,] Create&lt;T&gt;(int32 length1, int32 length2, int32 length3, !!T initial) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Create``1(System.Int32,System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of T) (length1 As Integer, length2 As Integer, length3 As Integer, initial As T) As T(,,)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.create : int -&gt; int -&gt; int -&gt; 'T -&gt; 'T[,,]" Usage="Microsoft.FSharp.Collections.Array3DModule.Create length1 length2 length3 initial" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("create")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[,,]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
        <Parameter Name="initial" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="length1">The length of the first dimension.</param>
        <param name="length2">The length of the second dimension.</param>
        <param name="length3">The length of the third dimension.</param>
        <param name="initial">The value of the array elements.</param>
        <summary>Creates an array whose elements are all initially the given value.</summary>
        <returns>The created array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Get&lt;T&gt; (T[,,] array, int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!T Get&lt;T&gt;(!!T[,,] array, int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Get``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Get(Of T) (array As T(,,), index1 As Integer, index2 As Integer, index3 As Integer) As T" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.get : 'T[,,] -&gt; int -&gt; int -&gt; int -&gt; 'T" Usage="Microsoft.FSharp.Collections.Array3DModule.Get array index1 index2 index3" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("get")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[,,]" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">The input array.</param>
        <param name="index1">The index along the first dimension.</param>
        <param name="index2">The index along the second dimension.</param>
        <param name="index3">The index along the third dimension.</param>
        <summary>Fetches an element from a 3D array. You can also use the syntax 'array.[index1,index2,index3]'</summary>
        <returns>The value at the given index.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[,,] Initialize&lt;T&gt; (int length1, int length2, int length3, Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;int,T&gt;&gt;&gt; initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!T[,,] Initialize&lt;T&gt;(int32 length1, int32 length2, int32 length3, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, !!T&gt;&gt;&gt; initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Initialize``1(System.Int32,System.Int32,System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,``0}}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Initialize(Of T) (length1 As Integer, length2 As Integer, length3 As Integer, initializer As FSharpFunc(Of Integer, FSharpFunc(Of Integer, FSharpFunc(Of Integer, T)))) As T(,,)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.init : int -&gt; int -&gt; int -&gt; (int -&gt; int -&gt; int -&gt; 'T) -&gt; 'T[,,]" Usage="Microsoft.FSharp.Collections.Array3DModule.Initialize length1 length2 length3 initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("init")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[,,]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
        <Parameter Name="initializer" Type="Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,T&gt;&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="length1">The length of the first dimension.</param>
        <param name="length2">The length of the second dimension.</param>
        <param name="length3">The length of the third dimension.</param>
        <param name="initializer">The function to create an initial value at each index into the array.</param>
        <summary>Creates an array given the dimensions and a generator function to compute the elements.</summary>
        <returns>The created array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Iterate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Iterate&lt;T&gt; (Microsoft.FSharp.Core.FSharpFunc&lt;T,Microsoft.FSharp.Core.Unit&gt; action, T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Iterate&lt;T&gt;(class Microsoft.FSharp.Core.FSharpFunc`2&lt;!!T, class Microsoft.FSharp.Core.Unit&gt; action, !!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Iterate(Of T) (action As FSharpFunc(Of T, Unit), array As T(,,))" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.iter : ('T -&gt; unit) -&gt; 'T[,,] -&gt; unit" Usage="Microsoft.FSharp.Collections.Array3DModule.Iterate action array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("iter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.FSharp.Core.FSharpFunc&lt;T,Microsoft.FSharp.Core.Unit&gt;" />
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="action">The function to apply to each element of the array.</param>
        <param name="array">The input array.</param>
        <summary>Applies the given function to each element of the array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterateIndexed&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void IterateIndexed&lt;T&gt; (Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;T,Microsoft.FSharp.Core.Unit&gt;&gt;&gt;&gt; action, T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static void IterateIndexed&lt;T&gt;(class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;!!T, class Microsoft.FSharp.Core.Unit&gt;&gt;&gt;&gt; action, !!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.IterateIndexed``1(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit}}}},``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IterateIndexed(Of T) (action As FSharpFunc(Of Integer, FSharpFunc(Of Integer, FSharpFunc(Of Integer, FSharpFunc(Of T, Unit)))), array As T(,,))" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.iteri : (int -&gt; int -&gt; int -&gt; 'T -&gt; unit) -&gt; 'T[,,] -&gt; unit" Usage="Microsoft.FSharp.Collections.Array3DModule.IterateIndexed action array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("iteri")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;T,Microsoft.FSharp.Core.Unit&gt;&gt;&gt;&gt;" />
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="action">The function to apply to each element of the array.</param>
        <param name="array">The input array.</param>
        <summary>Applies the given function to each element of the array. The integer indices passed to the
 function indicates the index of element.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length1&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int Length1&lt;T&gt; (T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Length1&lt;T&gt;(!!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Length1``1(``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Length1(Of T) (array As T(,,)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.length1 : 'T[,,] -&gt; int" Usage="Microsoft.FSharp.Collections.Array3DModule.Length1 array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("length1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">The input array.</param>
        <summary>Returns the length of an array in the first dimension  </summary>
        <returns>The length of the array in the first dimension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length2&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int Length2&lt;T&gt; (T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Length2&lt;T&gt;(!!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Length2``1(``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Length2(Of T) (array As T(,,)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.length2 : 'T[,,] -&gt; int" Usage="Microsoft.FSharp.Collections.Array3DModule.Length2 array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("length2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">The input array.</param>
        <summary>Returns the length of an array in the second dimension.</summary>
        <returns>The length of the array in the second dimension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length3&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int Length3&lt;T&gt; (T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 Length3&lt;T&gt;(!!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Length3``1(``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Length3(Of T) (array As T(,,)) As Integer" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.length3 : 'T[,,] -&gt; int" Usage="Microsoft.FSharp.Collections.Array3DModule.Length3 array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("length3")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">The input array.</param>
        <summary>Returns the length of an array in the third dimension.</summary>
        <returns>The length of the array in the third dimension.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult[,,] Map&lt;T,TResult&gt; (Microsoft.FSharp.Core.FSharpFunc&lt;T,TResult&gt; mapping, T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!TResult[,,] Map&lt;T, TResult&gt;(class Microsoft.FSharp.Core.FSharpFunc`2&lt;!!T, !!TResult&gt; mapping, !!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Map(Of T, TResult) (mapping As FSharpFunc(Of T, TResult), array As T(,,)) As TResult(,,)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.map : ('T -&gt; 'Result) -&gt; 'T[,,] -&gt; 'Result[,,]" Usage="Microsoft.FSharp.Collections.Array3DModule.Map mapping array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("map")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult[,,]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.FSharp.Core.FSharpFunc&lt;T,TResult&gt;" />
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="mapping">The function to transform each element of the array.</param>
        <param name="array">The input array.</param>
        <summary>Builds a new array whose elements are the results of applying the given function
 to each of the elements of the array.</summary>
        <returns>The array created from the transformed elements.</returns>
        <remarks>For non-zero-based arrays the basing on an input array will be propagated to the output
 array.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapIndexed&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static TResult[,,] MapIndexed&lt;T,TResult&gt; (Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;int,Microsoft.FSharp.Core.FSharpFunc&lt;T,TResult&gt;&gt;&gt;&gt; mapping, T[,,] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!TResult[,,] MapIndexed&lt;T, TResult&gt;(class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;int32, class Microsoft.FSharp.Core.FSharpFunc`2&lt;!!T, !!TResult&gt;&gt;&gt;&gt; mapping, !!T[,,] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.MapIndexed``2(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}}},``0[0:,0:,0:])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MapIndexed(Of T, TResult) (mapping As FSharpFunc(Of Integer, FSharpFunc(Of Integer, FSharpFunc(Of Integer, FSharpFunc(Of T, TResult)))), array As T(,,)) As TResult(,,)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.mapi : (int -&gt; int -&gt; int -&gt; 'T -&gt; 'Result) -&gt; 'T[,,] -&gt; 'Result[,,]" Usage="Microsoft.FSharp.Collections.Array3DModule.MapIndexed mapping array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("mapi")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TResult[,,]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;System.Int32,Microsoft.FSharp.Core.FSharpFunc&lt;T,TResult&gt;&gt;&gt;&gt;" />
        <Parameter Name="array" Type="T[,,]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="mapping">The function to transform the elements at each index in the array.</param>
        <param name="array">The input array.</param>
        <summary>Builds a new array whose elements are the results of applying the given function
 to each of the elements of the array. The integer indices passed to the
 function indicates the element being transformed.</summary>
        <returns>The array created from the transformed elements.</returns>
        <remarks>For non-zero-based arrays the basing on an input array will be propagated to the output
 array.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Set&lt;T&gt; (T[,,] array, int index1, int index2, int index3, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static void Set&lt;T&gt;(!!T[,,] array, int32 index1, int32 index2, int32 index3, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.Set``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Set(Of T) (array As T(,,), index1 As Integer, index2 As Integer, index3 As Integer, value As T)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.set : 'T[,,] -&gt; int -&gt; int -&gt; int -&gt; 'T -&gt; unit" Usage="Microsoft.FSharp.Collections.Array3DModule.Set array index1 index2 index3 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("set")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[,,]" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">The input array.</param>
        <param name="index1">The index along the first dimension.</param>
        <param name="index2">The index along the second dimension.</param>
        <param name="index3">The index along the third dimension.</param>
        <param name="value">The value to set at the given index.</param>
        <summary>Sets the value of an element in an array. You can also 
 use the syntax 'array.[index1,index2,index3] &lt;- value'.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroCreate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[,,] ZeroCreate&lt;T&gt; (int length1, int length2, int length3);" />
      <MemberSignature Language="ILAsm" Value=".method public static !!T[,,] ZeroCreate&lt;T&gt;(int32 length1, int32 length2, int32 length3) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.FSharp.Collections.Array3DModule.ZeroCreate``1(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ZeroCreate(Of T) (length1 As Integer, length2 As Integer, length3 As Integer) As T(,,)" />
      <MemberSignature Language="F#" Value="Microsoft.FSharp.Collections.Array3D.zeroCreate : int -&gt; int -&gt; int -&gt; 'T[,,]" Usage="Microsoft.FSharp.Collections.Array3DModule.ZeroCreate length1 length2 length3" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>4.4.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationArgumentCounts(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.FSharp.Core.CompilationSourceName("zeroCreate")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[,,]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="length1">The length of the first dimension.</param>
        <param name="length2">The length of the second dimension.</param>
        <param name="length3">The length of the third dimension.</param>
        <summary>Creates an array where the entries are initially the "default" value.</summary>
        <returns>The created array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>