<Type Name="FSharpHandler&lt;T&gt;" FullName="Microsoft.FSharp.Control.FSharpHandler&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate void FSharpHandler&lt;T&gt;(object sender, T args);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit FSharpHandler`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.FSharp.Control.FSharpHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub FSharpHandler(Of T)(sender As Object, args As T)" />
  <TypeSignature Language="F#" Value="type Handler&lt;'T&gt; = delegate of obj * 'T -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompilationMapping(Microsoft.FSharp.Core.SourceConstructFlags.ObjectType)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Microsoft.FSharp.Core.CompiledName("FSharpHandler`1")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="args" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <param name="sender">To be added.</param>
    <param name="args">The event arguments.</param>
    <summary>A delegate type associated with the F# event type <c>IEvent&lt;_&gt;</c></summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>